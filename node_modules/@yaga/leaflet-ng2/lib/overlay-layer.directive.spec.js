"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var index_1 = require("./index");
describe("Overlay-Layer Directive", function () {
    var layerControlProvider = new index_1.LayersControlProvider();
    var overlay;
    var layerProvider = new index_1.LayerProvider();
    layerProvider.ref = {};
    describe("[caption]", function () {
        it("should be changed in Leaflet when changing in Angular", function (done) {
            var val = "my layer";
            layerControlProvider.ref = {
                removeLayer: function () {
                    /* do nothing */
                },
                addOverlay: function (ref, caption) {
                    chai_1.expect(ref).equal(layerProvider.ref);
                    chai_1.expect(caption).equal(val);
                    done();
                },
            };
            overlay = new index_1.OverlayLayerDirective(layerProvider, layerControlProvider);
            overlay.caption = val;
        });
        it("should be readable", function () {
            var val = "my layer";
            layerControlProvider.ref = {
                removeLayer: function () {
                    /* do nothing */
                },
                addBaseLayer: function () {
                    /* do nothing */
                },
            };
            overlay = new index_1.OverlayLayerDirective(layerProvider, layerControlProvider);
            layerControlProvider.ref._layers = [{ layer: layerProvider.ref, name: val }];
            chai_1.expect(overlay.caption).equal(val);
        });
    });
});
//# sourceMappingURL=overlay-layer.directive.spec.js.map