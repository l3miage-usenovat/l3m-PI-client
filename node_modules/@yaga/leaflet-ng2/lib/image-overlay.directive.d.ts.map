{"version":3,"file":"image-overlay.directive.d.ts","sources":["image-overlay.directive.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, OnDestroy } from \"@angular/core\";\nimport { ImageOverlay, LatLngBounds, LatLngBoundsExpression, LeafletEvent, LeafletMouseEvent, PopupEvent, TooltipEvent } from \"leaflet\";\nimport { LayerGroupProvider } from \"./layer-group.provider\";\nimport { LayerProvider } from \"./layer.provider\";\n/**\n * Angular2 directive for Leaflet image overlays.\n *\n * *You can use this directive in an Angular2 template after importing `YagaModule`.*\n *\n * How to use in a template:\n * ```html\n * <yaga-map>\n *     <yaga-image-overlay\n *         [(url)]=\"...\"\n *         [(display)]=\"...\"\n *         [(opacity)]=\"...\"\n *         [(zIndex)]=\"...\"\n *         [(bounds)]=\"...\"\n *         [(north)]=\"...\"\n *         [(east)]=\"...\"\n *         [(south)]=\"...\"\n *         [(west)]=\"...\"\n *\n *         (add)=\"...\"\n *         (remove)=\"...\"\n *         (popupopen)=\"...\"\n *         (popupclose)=\"...\"\n *         (tooltipopen)=\"...\"\n *         (tooltipclose)=\"...\"\n *         (click)=\"...\"\n *         (dblclick)=\"...\"\n *         (mousedown)=\"...\"\n *         (mouseover)=\"...\"\n *         (mouseout)=\"...\"\n *         (contextmenu)=\"...\"\n *         (load)=\"...\"\n *         (error)=\"...\"\n *\n *         [crossOrigin]=\"...\"\n *         [alt]=\"...\"\n *         [interactive]=\"...\"\n *         [attribution]=\"...\"\n *         >\n *     </yaga-image-overlay>\n * </yaga-map>\n * ```\n *\n * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay Original Leaflet documentation\n * @link https://leaflet-ng2.yagajs.org/latest/browser-test?grep=Image-Overlay%20Directive Unit-Test\n * @link https://leaflet-ng2.yagajs.org/latest/coverage/lcov-report/lib/image-overlay.directive.js.html Test coverage\n * @link https://leaflet-ng2.yagajs.org/latest/typedoc/classes/imageoverlaydirective.html API documentation\n * @example https://leaflet-ng2.yagajs.org/latest/examples/image-overlay-directive\n */\nexport declare class ImageOverlayDirective extends ImageOverlay implements OnDestroy {\n    protected layerGroupProvider: LayerGroupProvider;\n    /**\n     * Two-Way bound property for the URL.\n     * Use it with `<yaga-image-overlay [(url)]=\"someValue\">` or\n     * `<yaga-image-overlay (urlChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-seturl Original Leaflet documentation\n     */\n    urlChange: EventEmitter<string>;\n    /**\n     * Two-Way bound property for the display status of the layer.\n     * Use it with `<yaga-image-overlay [(display)]=\"someValue\">`\n     * or `<yaga-image-overlay (displayChange)=\"processEvent($event)\">`\n     */\n    displayChange: EventEmitter<boolean>;\n    /**\n     * Two-Way bound property for the opacity of the layer.\n     * Use it with `<yaga-image-overlay [(opacity)]=\"someValue\">`\n     * or `<yaga-image-overlay (opacityChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-opacity Original Leaflet documentation\n     */\n    opacityChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the bounds of the image.\n     * Use it with `<yaga-image-overlay [(bounds)]=\"someValue\">`\n     * or `<yaga-image-overlay (opacityChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-setbounds Original Leaflet documentation\n     */\n    boundsChange: EventEmitter<LatLngBounds>;\n    /**\n     * Two-Way bound property for the north bounds of the image.\n     * Use it with `<yaga-image-overlay [(north)]=\"someValue\">`\n     * or `<yaga-image-overlay (northChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-setbounds Original Leaflet documentation\n     */\n    northChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the east bounds of the image.\n     * Use it with `<yaga-image-overlay [(east)]=\"someValue\">`\n     * or `<yaga-image-overlay (eastChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-setbounds Original Leaflet documentation\n     */\n    eastChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the south bounds of the image.\n     * Use it with `<yaga-image-overlay [(south)]=\"someValue\">`\n     * or `<yaga-image-overlay (southChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-setbounds Original Leaflet documentation\n     */\n    southChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the west bounds of the image.\n     * Use it with `<yaga-image-overlay [(west)]=\"someValue\">`\n     * or `<yaga-image-overlay (westChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-setbounds Original Leaflet documentation\n     */\n    westChange: EventEmitter<number>;\n    /**\n     * From leaflet fired add event.\n     * Use it with `<yaga-image-overlay (add)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-add Original Leaflet documentation\n     */\n    addEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired remove event.\n     * Use it with `<yaga-image-overlay (remove)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-remove Original Leaflet documentation\n     */\n    removeEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired popupopen event.\n     * Use it with `<yaga-image-overlay (popupopen)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-popupopen Original Leaflet documentation\n     */\n    popupopenEvent: EventEmitter<PopupEvent>;\n    /**\n     * From leaflet fired popupclose event.\n     * Use it with `<yaga-image-overlay (popupclose)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-popupclose Original Leaflet documentation\n     */\n    popupcloseEvent: EventEmitter<PopupEvent>;\n    /**\n     * From leaflet fired tooltipopen event.\n     * Use it with `<yaga-image-overlay (tooltipopen)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-tooltipopen Original Leaflet documentation\n     */\n    tooltipopenEvent: EventEmitter<TooltipEvent>;\n    /**\n     * From leaflet fired tooltipclose event.\n     * Use it with `<yaga-image-overlay (tooltipclose)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-tooltipclose Original Leaflet documentation\n     */\n    tooltipcloseEvent: EventEmitter<TooltipEvent>;\n    /**\n     * From leaflet fired click event.\n     * Use it with `<yaga-image-overlay (click)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-click Original Leaflet documentation\n     */\n    clickEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired dblclick event.\n     * Use it with `<yaga-image-overlay (dblclick)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-dblclick Original Leaflet documentation\n     */\n    dblclickEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mousedown event.\n     * Use it with `<yaga-image-overlay (mousedown)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-mousedown Original Leaflet documentation\n     */\n    mousedownEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mouseover event.\n     * Use it with `<yaga-image-overlay (mouseover)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-mouseover Original Leaflet documentation\n     */\n    mouseoverEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mouseout event.\n     * Use it with `<yaga-image-overlay (mouseout)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-mouseout Original Leaflet documentation\n     */\n    mouseoutEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired contextmenu event.\n     * Use it with `<yaga-image-overlay (contextmenu)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-contextmenu Original Leaflet documentation\n     */\n    contextmenuEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired load event.\n     * Use it with `<yaga-image-overlay (load)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-load Original Leaflet documentation\n     */\n    loadEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired error event.\n     * Use it with `<yaga-image-overlay (error)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-error Original Leaflet documentation\n     */\n    errorEvent: EventEmitter<LeafletEvent>;\n    constructor(layerGroupProvider: LayerGroupProvider, layerProvider: LayerProvider);\n    /**\n     * This function gets called from Angular on destroy of the html-component.\n     * @link https://angular.io/docs/ts/latest/api/core/index/OnDestroy-class.html\n     */\n    ngOnDestroy(): void;\n    /**\n     * Derived method of the original setUrl method.\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-seturl Original Leaflet documentation\n     */\n    setUrl(url: string): this;\n    /**\n     * Two-Way bound property for the URL.\n     * Use it with `<yaga-image-overlay [(url)]=\"someValue\">` or `<yaga-image-overlay [url]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-seturl Original Leaflet documentation\n     */\n    url: string;\n    /**\n     * Derived method of the original setOpacity method.\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-setopacity Original Leaflet documentation\n     */\n    setOpacity(val: number): this;\n    /**\n     * Two-Way bound property for the opacity.\n     * Use it with `<yaga-image-overlay [(opacity)]=\"someValue\">` or `<yaga-image-overlay [opacity]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-setopacity Original Leaflet documentation\n     */\n    opacity: number;\n    /**\n     * Two-Way bound property for the display status of the layer.\n     * Use it with `<yaga-image-overlay [(display)]=\"someValue\">` or `<yaga-image-overlay [display]=\"someValue\">`\n     */\n    /**\n    * Two-Way bound property for the display status of the layer.\n    * Use it with `<yaga-image-overlay [(display)]=\"someValue\">` or `<yaga-image-overlay [display]=\"someValue\">`\n    */\n    display: boolean;\n    /**\n     * Derived method of the original setBounds method.\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-setbounds Original Leaflet documentation\n     */\n    setBounds(val: LatLngBoundsExpression): this;\n    /**\n     * Two-Way bound property for the bounds of the image.\n     * Use it with `<yaga-image-overlay [(bounds)]=\"someValue\">` or `<yaga-image-overlay [bounds]=\"someValue\">`\n     */\n    bounds: LatLngBounds;\n    /**\n     * Two-Way bound property for the north bounds of the image.\n     * Use it with `<yaga-image-overlay [(north)]=\"someValue\">` or `<yaga-image-overlay [north]=\"someValue\">`\n     */\n    north: number;\n    /**\n     * Two-Way bound property for the east bounds of the image.\n     * Use it with `<yaga-image-overlay [(east)]=\"someValue\">` or `<yaga-image-overlay [east]=\"someValue\">`\n     */\n    east: number;\n    /**\n     * Two-Way bound property for the south bounds of the image.\n     * Use it with `<yaga-image-overlay [(south)]=\"someValue\">` or `<yaga-image-overlay [south]=\"someValue\">`\n     */\n    south: number;\n    /**\n     * Two-Way bound property for the west bounds of the image.\n     * Use it with `<yaga-image-overlay [(west)]=\"someValue\">` or `<yaga-image-overlay [west]=\"someValue\">`\n     */\n    west: number;\n    /**\n     * Input for the crossOrigin.\n     * Use it with `<yaga-image-overlay [crossOrigin]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-crossorigin Original Leaflet documentation\n     */\n    crossOrigin: boolean;\n    /**\n     * Input for the alternative text.\n     * Use it with `<yaga-image-overlay [alt]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-alt Original Leaflet documentation\n     */\n    alt: string;\n    /**\n     * Input for the state of interaction.\n     * Use it with `<yaga-image-overlay [interactive]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-interactive Original Leaflet documentation\n     */\n    interactive: boolean;\n    /**\n     * Input for the attribution.\n     * Use it with `<yaga-image-overlay [attribution]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#imageoverlay-attribution Original Leaflet documentation\n     */\n    attribution: string;\n}\n"]}