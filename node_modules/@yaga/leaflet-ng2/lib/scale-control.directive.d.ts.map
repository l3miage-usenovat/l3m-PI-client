{"version":3,"file":"scale-control.directive.d.ts","sources":["scale-control.directive.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, OnDestroy } from \"@angular/core\";\nimport { Control, ControlPosition, LeafletEvent, LeafletMouseEvent, Map } from \"leaflet\";\nimport { MapProvider } from \"./map.provider\";\n/**\n * Angular2 directive for the attribution-control of Leaflet.\n *\n * *You can use this directive in an Angular2 template after importing `YagaModule`.*\n *\n * How to use in a template:\n * ```html\n * <yaga-map>\n *     <yaga-scale-control\n *         [(display)]=\"...\"\n *         [(zIndex)]=\"...\"\n *         [(position)]=\"...\"\n *\n *         [metric]=\"...\"\n *         [imperial]=\"...\"\n *         [maxWidth]=\"...\"\n *\n *         (add)=\"...\"\n *         (remove)=\"...\"\n *         (click)=\"...\"\n *         (dblclick)=\"...\"\n *         (mousedown)=\"...\"\n *         (mouseover)=\"...\"\n *         (mouseout)=\"...\"\n *         >\n *     </yaga-scale-control>\n * </yaga-map>\n * ```\n *\n * @link http://leafletjs.com/reference-1.2.0.html#control-scale Original Leaflet documentation\n * @link https://leaflet-ng2.yagajs.org/latest/browser-test?grep=Scale-Control%20Directive Unit-Test\n * @link https://leaflet-ng2.yagajs.org/latest/coverage/lcov-report/lib/attribution-control.directive.js.html\n * Test coverage\n * @link https://leaflet-ng2.yagajs.org/latest/typedoc/classes/scalecontroldirective.html API documentation\n * @example https://leaflet-ng2.yagajs.org/latest/examples/scale-control-directive/\n */\nexport declare class ScaleControlDirective extends Control.Scale implements OnDestroy {\n    protected mapProvider: MapProvider;\n    /**\n     * Two-Way bound property for the display status of the control.\n     * Use it with `<yaga-scale-control [(display)]=\"someValue\">`\n     * or `<yaga-scale-control (displayChange)=\"processEvent($event)\">`\n     */\n    displayChange: EventEmitter<boolean>;\n    /**\n     * Two-Way bound property for the zIndex of the control.\n     * Use it with `<yaga-scale-control [(zIndex)]=\"someValue\">`\n     * or `<yaga-scale-control (zIndexChange)=\"processEvent($event)\">`\n     */\n    zIndexChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the position of the control.\n     * Use it with `<yaga-scale-control [(position)]=\"someValue\">`\n     * or `<yaga-scale-control (positionChange)=\"processEvent($event)\">`\n     */\n    positionChange: EventEmitter<ControlPosition>;\n    /**\n     * From leaflet fired add event.\n     * Use it with `<yaga-scale-control (add)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#control-scale-add Original Leaflet documentation\n     */\n    addEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired remove event.\n     * Use it with `<yaga-scale-control (remove)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#control-scale-remove Original Leaflet documentation\n     */\n    removeEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired click event.\n     * Use it with `<yaga-scale-control (click)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#control-scale-click Original Leaflet documentation\n     */\n    clickEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired dblclick event.\n     * Use it with `<yaga-scale-control (dblclick)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#control-scale-dblclick Original Leaflet documentation\n     */\n    dblclickEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mousedown event.\n     * Use it with `<yaga-scale-control (mousedown)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#control-scale-mousedown Original Leaflet documentation\n     */\n    mousedownEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mouseover event.\n     * Use it with `<yaga-scale-control (mouseover)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#control-scale-mouseover Original Leaflet documentation\n     */\n    mouseoverEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mouseout event.\n     * Use it with `<yaga-scale-control (mouseout)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#control-scale-mouseout Original Leaflet documentation\n     */\n    mouseoutEvent: EventEmitter<LeafletMouseEvent>;\n    constructor(mapProvider: MapProvider);\n    /**\n     * Internal method to provide the removal of the control in Leaflet, when removing it from the Angular template\n     */\n    ngOnDestroy(): void;\n    /**\n     * Derived remove function\n     */\n    remove(): this;\n    /**\n     * Derived addTo function\n     */\n    addTo(map: Map): this;\n    /**\n     * Derived method of the original setPosition.\n     * @link http://leafletjs.com/reference-1.2.0.html#control-scale-setposition Original Leaflet documentation\n     */\n    setPosition(val: ControlPosition): this;\n    /**\n     * Two-Way bound property for the opacity.\n     * Use it with `<yaga-scale-control [(opacity)]=\"someValue\">`\n     * or `<yaga-scale-control [opacity]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#control-scale-opacity Original Leaflet documentation\n     */\n    opacity: number | undefined;\n    /**\n     * Two-Way bound property for the display state.\n     * Use it with `<yaga-scale-control [(display)]=\"someValue\">`\n     * or `<yaga-scale-control [display]=\"someValue\">`\n     */\n    display: boolean;\n    /**\n     * Two-Way bound property for the position.\n     * Use it with `<yaga-scale-control [(position)]=\"someValue\">`\n     * or `<yaga-scale-control [position]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#control-scale-position Original Leaflet documentation\n     */\n    position: ControlPosition;\n    /**\n     * Two-Way bound property for the zIndex of the control.\n     * Use it with `<yaga-scale-control [(zIndex)]=\"someValue\">`\n     * or `<yaga-scale-control (zIndexChange)=\"processEvent($event)\">`\n     */\n    zIndex: number | undefined;\n    /**\n     * Input for scale max-width.\n     * Use it with `<yaga-scale-control [(maxWidth)]=\"someValue\">`\n     * or `<yaga-scale-control [maxWidth]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#control-scale-maxwidth Original Leaflet documentation\n     */\n    maxWidth: number | undefined;\n    /**\n     * Input for state of metric-scale state.\n     * Use it with `<yaga-scale-control [(metric)]=\"someValue\">`\n     * or `<yaga-scale-control [metric]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#control-scale-metric Original Leaflet documentation\n     */\n    metric: boolean;\n    /**\n     * Input for state of imperial-scale state.\n     * Use it with `<yaga-scale-control [(imperial)]=\"someValue\">`\n     * or `<yaga-scale-control [imperial]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#control-scale-imperial Original Leaflet documentation\n     */\n    imperial: boolean;\n}\n"]}