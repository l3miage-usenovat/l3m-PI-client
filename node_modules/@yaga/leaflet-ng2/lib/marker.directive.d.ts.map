{"version":3,"file":"marker.directive.d.ts","sources":["marker.directive.d.ts"],"names":[],"mappingssourcesContent":["import { AfterContentInit, EventEmitter, OnDestroy } from \"@angular/core\";\nimport { DivIcon, DragEndEvent, Icon, LatLng, LatLngLiteral, LatLngTuple, LeafletEvent, LeafletMouseEvent, Marker, PopupEvent, TooltipEvent } from \"leaflet\";\nimport { LayerGroupProvider } from \"./layer-group.provider\";\nimport { LayerProvider } from \"./layer.provider\";\nimport { MarkerProvider } from \"./marker.provider\";\n/**\n * Angular2 directive for markers of Leaflet.\n *\n * *You can use this directive in an Angular2 template after importing `YagaModule`.*\n *\n * How to use in a template:\n * ```html\n * <yaga-map>\n *     <yaga-marker\n *         [(draggable)]=\"...\"\n *         [(display)]=\"...\"\n *         [(opacity)]=\"...\"\n *         [(lat)]=\"...\"\n *         [(lng)]=\"...\"\n *         [(position)]=\"...\"\n *         [(zIndexOffset)]=\"...\"\n *         [(icon)]=\"...\"\n *\n *         (dragend)=\"...\"\n *         (dragstart)=\"...\"\n *         (movestart)=\"...\"\n *         (drag)=\"...\"\n *         (moveend)=\"...\"\n *         (add)=\"...\"\n *         (remove)=\"...\"\n *         (popupopen)=\"...\"\n *         (popupclose)=\"...\"\n *         (tooltipopen)=\"...\"\n *         (tooltipclose)=\"...\"\n *         (click)=\"...\"\n *         (dblclick)=\"...\"\n *         (mousedown)=\"...\"\n *         (mouseover)=\"...\"\n *         (mouseout)=\"...\"\n *         (contextmenu)=\"...\"\n *\n *         [title]=\"...\"\n *         [alt]=\"...\"\n *         >\n *     </yaga-marker>\n * </yaga-map>\n * ```\n *\n * @link http://leafletjs.com/reference-1.2.0.html#marker Original Leaflet documentation\n * @link https://leaflet-ng2.yagajs.org/latest/browser-test?grep=Marker%20Directive Unit-Test\n * @link https://leaflet-ng2.yagajs.org/latest/coverage/lcov-report/lib/marker.directive.js.html\n * Test coverage\n * @link https://leaflet-ng2.yagajs.org/latest/typedoc/classes/marker.directive.js.html API documentation\n * @example https://leaflet-ng2.yagajs.org/latest/examples/marker-directive/\n */\nexport declare class MarkerDirective extends Marker implements AfterContentInit, OnDestroy {\n    protected layerGroupProvider: LayerGroupProvider;\n    /**\n     * Two-Way bound property for the latlng-position of the geometry.\n     * Use it with `<yaga-marker [(position)]=\"someValue\">`\n     * or `<yaga-marker (positionChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n     */\n    positionChange: EventEmitter<LatLng>;\n    /**\n     * Two-Way bound property for the latitude of the geometry.\n     * Use it with `<yaga-marker [(lat)]=\"someValue\">`\n     * or `<yaga-marker (latChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n     */\n    latChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the longitude of the geometry.\n     * Use it with `<yaga-marker [(lng)]=\"someValue\">`\n     * or `<yaga-marker (lngChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n     */\n    lngChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the opacity of the geometry.\n     * Use it with `<yaga-marker [(opacity)]=\"someValue\">`\n     * or `<yaga-marker (opacityChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-setopacity Original Leaflet documentation\n     */\n    opacityChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the display status of the geometry.\n     * Use it with `<yaga-marker [(display)]=\"someValue\">`\n     * or `<yaga-marker (displayChange)=\"processEvent($event)\">`\n     */\n    displayChange: EventEmitter<boolean>;\n    /**\n     * Two-Way bound property for the offset of the zIndex.\n     * Use it with `<yaga-marker [(zIndexOffset)]=\"someValue\">`\n     * or `<yaga-marker (zIndexOffsetChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.3.0.html#marker-zindexoffset Original Leaflet documentation\n     */\n    zIndexOffsetChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the draggable state.\n     * Use it with `<yaga-marker [(draggable)]=\"someValue\">`\n     * or `<yaga-marker (draggableChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.3.0.html#marker-dragging Original Leaflet documentation\n     */\n    draggableChange: EventEmitter<boolean>;\n    /**\n     * Two-Way bound property for the icon.\n     * Use it with `<yaga-marker [(icon)]=\"someValue\">`\n     * or `<yaga-marker (iconChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.3.0.html#marker-seticon Original Leaflet documentation\n     */\n    iconChange: EventEmitter<Icon | DivIcon>;\n    tooltipOpenedChange: EventEmitter<boolean>;\n    popupOpenedChange: EventEmitter<boolean>;\n    /**\n     * From leaflet fired add event.\n     * Use it with `<yaga-marker (dragend)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-dragend Original Leaflet documentation\n     */\n    dragendEvent: EventEmitter<DragEndEvent>;\n    /**\n     * From leaflet fired add event.\n     * Use it with `<yaga-marker (dragstart)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-dragstart Original Leaflet documentation\n     */\n    dragstartEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired add event.\n     * Use it with `<yaga-marker (movestart)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-movestart Original Leaflet documentation\n     */\n    movestartEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired add event.\n     * Use it with `<yaga-marker (drag)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-drag Original Leaflet documentation\n     */\n    dragEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired add event.\n     * Use it with `<yaga-marker (moveend)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-moveend Original Leaflet documentation\n     */\n    moveendEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired add event.\n     * Use it with `<yaga-marker (add)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-add Original Leaflet documentation\n     */\n    addEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired remove event.\n     * Use it with `<yaga-marker (remove)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-remove Original Leaflet documentation\n     */\n    removeEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired popupopen event.\n     * Use it with `<yaga-marker (popupopen)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-popupopen Original Leaflet documentation\n     */\n    popupopenEvent: EventEmitter<PopupEvent>;\n    /**\n     * From leaflet fired popupclose event.\n     * Use it with `<yaga-marker (popupclose)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-popupclose Original Leaflet documentation\n     */\n    popupcloseEvent: EventEmitter<PopupEvent>;\n    /**\n     * From leaflet fired tooltipopen event.\n     * Use it with `<yaga-marker (tooltipopen)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-tooltipopen Original Leaflet documentation\n     */\n    tooltipopenEvent: EventEmitter<TooltipEvent>;\n    /**\n     * From leaflet fired tooltipclose event.\n     * Use it with `<yaga-marker (tooltipclose)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-tooltipclose Original Leaflet documentation\n     */\n    tooltipcloseEvent: EventEmitter<TooltipEvent>;\n    /**\n     * From leaflet fired click event.\n     * Use it with `<yaga-marker (click)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-click Original Leaflet documentation\n     */\n    clickEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired dblclick event.\n     * Use it with `<yaga-marker (dblclick)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-dblclick Original Leaflet documentation\n     */\n    dblclickEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mousedown event.\n     * Use it with `<yaga-marker (mousedown)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-mousedown Original Leaflet documentation\n     */\n    mousedownEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mouseover event.\n     * Use it with `<yaga-marker (mouseover)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-mouseover Original Leaflet documentation\n     */\n    mouseoverEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mouseout event.\n     * Use it with `<yaga-marker (mouseout)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-mouseout Original Leaflet documentation\n     */\n    mouseoutEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired contextmenu event.\n     * Use it with `<yaga-marker (contextmenu)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-contextmenu Original Leaflet documentation\n     */\n    contextmenuEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * Internal property to stop further processing while it is not initialized\n     */\n    private initialized;\n    constructor(layerGroupProvider: LayerGroupProvider, layerProvider: LayerProvider, markerProvider: MarkerProvider);\n    /**\n     * Internal method that provides the initialization of the directive\n     */\n    ngAfterContentInit(): void;\n    /**\n     * Internal method to provide the removal of the layer in Leaflet, when removing it from the Angular template\n     */\n    ngOnDestroy(): void;\n    /**\n     * Two-Way bound property for the display status of the layer.\n     * Use it with `<yaga-marker [(display)]=\"someValue\">` or `<yaga-marker [display]=\"someValue\">`\n     */\n    display: boolean;\n    /**\n     * Derived method of the original setLatLng method.\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n     */\n    setLatLng(val: LatLng | LatLngLiteral | LatLngTuple): this;\n    /**\n     * Two-Way bound property for the position of the marker.\n     * Use it with `<yaga-marker [(position)]=\"someValue\">` or `<yaga-marker [position]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n     */\n    position: LatLng;\n    /**\n     * Two-Way bound property for the position of the marker.\n     * Use it with `<yaga-marker [(lat)]=\"someValue\">` or `<yaga-marker [lat]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n     */\n    lat: number;\n    /**\n     * Two-Way bound property for the position of the marker.\n     * Use it with `<yaga-marker [(lng)]=\"someValue\">` or `<yaga-marker [lng]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n     */\n    lng: number;\n    /**\n     * Derived method of the original setOpacity method.\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-setopacity Original Leaflet documentation\n     */\n    setOpacity(val: number): this;\n    /**\n     * Two-Way bound property for the opacity of the marker.\n     * Use it with `<yaga-marker [(opacity)]=\"someValue\">` or `<yaga-marker [opacity]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-setopacity Original Leaflet documentation\n     */\n    opacity: number | undefined;\n    /**\n     * Two-Way bound property for the state of the popup.\n     * Use it with `<yaga-marker [(popupOpened)]=\"someValue\">` or `<yaga-marker [popupOpened]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-openpopup Original Leaflet documentation\n     */\n    popupOpened: boolean;\n    /**\n     * Two-Way bound property for the state of the popup.\n     * Use it with `<yaga-marker [(tooltipOpened)]=\"someValue\">` or `<yaga-marker [tooltipOpened]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-opentooltip Original Leaflet documentation\n     */\n    tooltipOpened: boolean;\n    /**\n     * Derived method of the original setIcon method.\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-seticon Original Leaflet documentation\n     */\n    setIcon(val: Icon | DivIcon): this;\n    /**\n     * Two-Way bound property for the state of the popup.\n     * Use it with `<yaga-marker [(icon)]=\"someValue\">` or `<yaga-marker [icon]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-seticon Original Leaflet documentation\n     */\n    icon: Icon | DivIcon;\n    /**\n     * Two-Way bound property for the state of the dragging.\n     * Use it with `<yaga-marker [(draggable)]=\"someValue\">` or `<yaga-marker [draggable]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-dragging Original Leaflet documentation\n     */\n    draggable: boolean;\n    /**\n     * Derived method of the original setZIndexOffset method.\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-zindexoffset Original Leaflet documentation\n     */\n    setZIndexOffset(val: number): this;\n    /**\n     * Two-Way bound property for the offset of the zIndex.\n     * Use it with `<yaga-marker [(draggable)]=\"someValue\">` or `<yaga-marker [draggable]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-zindexoffset Original Leaflet documentation\n     */\n    zIndexOffset: number;\n    /**\n     * Input for the title.\n     * Use it with `<yaga-marker [title]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-title Original Leaflet documentation\n     */\n    title: string;\n    /**\n     * Input for the alternative text.\n     * Use it with `<yaga-marker [alt]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-title Original Leaflet documentation\n     */\n    alt: string | undefined;\n}\n"]}