{"version":3,"file":"geojson.directive.js","sources":["geojson.directive.js"],"names":[],"mappingsmCAKO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAyB;AACzB;AACA;AACA;AACA","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar leaflet_1 = require(\"leaflet\");\nvar consts_1 = require(\"./consts\");\nvar layer_group_provider_1 = require(\"./layer-group.provider\");\nvar layer_provider_1 = require(\"./layer.provider\");\n/**\n * Angular2 directive for GeoJSON of Leaflet.\n *\n * *You can use this directive in an Angular2 template after importing `YagaModule`.*\n *\n * How to use in a template:\n * ```html\n * <yaga-map>\n *     <yaga-geojson\n *         [(data)]=\"...\"\n *         [(stroke)]=\"...\"\n *         [(color)]=\"...\"\n *         [(weight)]=\"...\"\n *         [(opacity)]=\"...\"\n *         [(lineCap)]=\"...\"\n *         [(lineJoin)]=\"...\"\n *         [(dashArray)]=\"...\"\n *         [(dashOffset)]=\"...\"\n *         [(fill)]=\"...\"\n *         [(fillColor)]=\"...\"\n *         [(fillOpacity)]=\"...\"\n *         [(fillRule)]=\"...\"\n *         [(className)]=\"...\"\n *         [(lat)]=\"...\"\n *         [(lng)]=\"...\"\n *         [(radius)]=\"...\"\n *\n *         (add)=\"...\"\n *         (remove)=\"...\"\n *         (popupopen)=\"...\"\n *         (popupclose)=\"...\"\n *         (tooltipopen)=\"...\"\n *         (tooltipclose)=\"...\"\n *         (click)=\"...\"\n *         (dblclick)=\"...\"\n *         (mousedown)=\"...\"\n *         (mouseover)=\"...\"\n *         (mouseout)=\"...\"\n *         (contextmenu)=\"...\"\n *         (onEachFeature)=\"...\"\n *\n *         [data]=\"...\"\n *         [filter]=\"...\"\n *         [pointToLayer]=\"...\"\n *         [styler]=\"...\"\n *         [defaultStyle]=\"...\"\n *         >\n *     </yaga-geojson>\n * </yaga-map>\n * ```\n *\n * @link http://leafletjs.com/reference-1.2.0.html#geojson Original Leaflet documentation\n * @link https://leaflet-ng2.yagajs.org/latest/browser-test?grep=GeoJSON%20Directive Unit-Test\n * @link https://leaflet-ng2.yagajs.org/latest/coverage/lcov-report/lib/geojson.directive.js.html\n * Test coverage\n * @link https://leaflet-ng2.yagajs.org/latest/typedoc/classes/geojson.directive.js.html API documentation\n * @example https://leaflet-ng2.yagajs.org/latest/examples/geojson-directive/\n */\nvar GeoJSONDirective = /** @class */ (function (_super) {\n    __extends(GeoJSONDirective, _super);\n    function GeoJSONDirective(parentLayerGroupProvider, layerGroupProvider, layerProvider) {\n        var _this = _super.call(this, { features: [], type: \"FeatureCollection\" }, {\n            filter: function (feature) {\n                if (_this.middleware.filter) {\n                    return _this.middleware.filter(feature);\n                }\n                return true;\n            },\n            onEachFeature: function (feature, layer) {\n                _this.onEachFeatureEvent.emit({ feature: feature, layer: layer });\n            },\n            pointToLayer: function (geoJSON, latLng) {\n                if (_this.middleware.pointToLayer) {\n                    return _this.middleware.pointToLayer(geoJSON, latLng);\n                }\n                return new leaflet_1.Marker(latLng);\n            },\n            style: function (geoJSON) {\n                var defaultStyle = _this.middleware.defaultStyle;\n                if (_this.middleware.styler) {\n                    return _this.middleware.styler(geoJSON, defaultStyle);\n                }\n                return defaultStyle;\n            },\n        }) || this;\n        _this.parentLayerGroupProvider = parentLayerGroupProvider;\n        /* tslint:disable:max-line-length */\n        _this.dataChange = new core_1.EventEmitter();\n        /* tslint:enable */\n        /**\n         * From leaflet fired add event.\n         * Use it with `<yaga-geojson (add)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-add Original Leaflet documentation\n         */\n        _this.addEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired remove event.\n         * Use it with `<yaga-geojson (remove)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-remove Original Leaflet documentation\n         */\n        _this.removeEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired popupopen event.\n         * Use it with `<yaga-geojson (popupopen)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-popupopen Original Leaflet documentation\n         */\n        _this.popupopenEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired popupclose event.\n         * Use it with `<yaga-geojson (popupclose)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-popupclose Original Leaflet documentation\n         */\n        _this.popupcloseEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired tooltipopen event.\n         * Use it with `<yaga-geojson (tooltipopen)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-tooltipopen Original Leaflet documentation\n         */\n        _this.tooltipopenEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired tooltipclose event.\n         * Use it with `<yaga-geojson (tooltipclose)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-tooltipclose Original Leaflet documentation\n         */\n        _this.tooltipcloseEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired click event.\n         * Use it with `<yaga-geojson (click)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-click Original Leaflet documentation\n         */\n        _this.clickEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired dblclick event.\n         * Use it with `<yaga-geojson (dblclick)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-dblclick Original Leaflet documentation\n         */\n        _this.dblclickEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired mousedown event.\n         * Use it with `<yaga-geojson (mousedown)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-mousedown Original Leaflet documentation\n         */\n        _this.mousedownEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired mouseover event.\n         * Use it with `<yaga-geojson (mouseover)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-mouseover Original Leaflet documentation\n         */\n        _this.mouseoverEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired mouseout event.\n         * Use it with `<yaga-geojson (mouseout)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-mouseout Original Leaflet documentation\n         */\n        _this.mouseoutEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired contextmenu event.\n         * Use it with `<yaga-geojson (contextmenu)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-contextmenu Original Leaflet documentation\n         */\n        _this.contextmenuEvent = new core_1.EventEmitter();\n        /* tslint:disable:max-line-length */\n        _this.onEachFeatureEvent = new core_1.EventEmitter();\n        /* tslint:enable */\n        /**\n         * Property to prevent changes before directive is initialized\n         */\n        _this.initialized = false;\n        /**\n         * Object that stores the middleware functions and the default style\n         */\n        _this.middleware = {\n            defaultStyle: consts_1.DEFAULT_STYLE,\n        };\n        layerProvider.ref = _this;\n        layerGroupProvider.ref = _this;\n        _this.parentLayerGroupProvider.ref.addLayer(_this);\n        // Events\n        _this.on(\"add\", function (event) {\n            _this.addEvent.emit(event);\n        });\n        _this.on(\"remove\", function (event) {\n            _this.removeEvent.emit(event);\n        });\n        _this.on(\"popupopen\", function (event) {\n            _this.popupopenEvent.emit(event);\n        });\n        _this.on(\"popupclose\", function (event) {\n            _this.popupcloseEvent.emit(event);\n        });\n        _this.on(\"tooltipopen\", function (event) {\n            _this.tooltipopenEvent.emit(event);\n        });\n        _this.on(\"tooltipclose\", function (event) {\n            _this.tooltipcloseEvent.emit(event);\n        });\n        _this.on(\"click\", function (event) {\n            _this.clickEvent.emit(event);\n        });\n        _this.on(\"dblclick\", function (event) {\n            _this.dblclickEvent.emit(event);\n        });\n        _this.on(\"mousedown\", function (event) {\n            _this.mousedownEvent.emit(event);\n        });\n        _this.on(\"mouseover\", function (event) {\n            _this.mouseoverEvent.emit(event);\n        });\n        _this.on(\"mouseout\", function (event) {\n            _this.mouseoutEvent.emit(event);\n        });\n        _this.on(\"contextmenu\", function (event) {\n            _this.contextmenuEvent.emit(event);\n        });\n        return _this;\n    }\n    /**\n     * Internal method that provides the initialization of the child popup or tooltip\n     */\n    GeoJSONDirective.prototype.ngAfterContentInit = function () {\n        this.initialized = true;\n        this.redraw();\n    };\n    /**\n     * Internal method to provide the removal of the layer in Leaflet, when removing it from the Angular template\n     */\n    GeoJSONDirective.prototype.ngOnDestroy = function () {\n        this.removeFrom(this.parentLayerGroupProvider.ref);\n    };\n    /**\n     * Derived method of the original addData.\n     * @link http://leafletjs.com/reference-1.2.0.html#geojson-adddata Original Leaflet documentation\n     */\n    GeoJSONDirective.prototype.addData = function (data) {\n        var returnValue = _super.prototype.addData.call(this, data);\n        if (!this.initialized) {\n            return returnValue;\n        }\n        this.dataChange.emit(this.toGeoJSON());\n        return returnValue;\n    };\n    /**\n     * Derived method of the original clearLayers.\n     * @link http://leafletjs.com/reference-1.2.0.html#geojson-clearlayers Original Leaflet documentation\n     */\n    GeoJSONDirective.prototype.clearLayers = function () {\n        _super.prototype.clearLayers.call(this);\n        this.dataChange.emit(this.toGeoJSON());\n        return this;\n    };\n    /**\n     * Method to remove all existing data and add the new data in one step.\n     *\n     * *Note: this is a combination of `clearLayers` and `addData`*\n     */\n    GeoJSONDirective.prototype.setData = function (val) {\n        _super.prototype.clearLayers.call(this);\n        _super.prototype.addData.call(this, val);\n        return this;\n    };\n    Object.defineProperty(GeoJSONDirective.prototype, \"data\", {\n        get: function () {\n            return this.toGeoJSON();\n        },\n        /**\n         * Two-Way bound property for the data geoJSON data.\n         * Use it with `<yaga-geojson [(data)]=\"someValue\">` or `<yaga-geojson [data]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-l-geojson Original Leaflet documentation\n         */\n        set: function (val) {\n            _super.prototype.clearLayers.call(this);\n            _super.prototype.addData.call(this, val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoJSONDirective.prototype, \"filter\", {\n        get: function () {\n            return this.middleware.filter;\n        },\n        /**\n         * Input for the filter function.\n         * Use it with `<yaga-geojson [filter]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-filter Original Leaflet documentation\n         */\n        set: function (filterFn) {\n            this.middleware.filter = filterFn;\n            this.redraw();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoJSONDirective.prototype, \"pointToLayer\", {\n        get: function () {\n            return this.middleware.pointToLayer;\n        },\n        /**\n         * Input for the pointToLayer function.\n         * Use it with `<yaga-geojson [pointToLayer]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-pointtolayer Original Leaflet documentation\n         */\n        set: function (pointToLayerFn) {\n            this.middleware.pointToLayer = pointToLayerFn;\n            this.redraw();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoJSONDirective.prototype, \"styler\", {\n        get: function () {\n            return this.middleware.styler;\n        },\n        /**\n         * Input for the styler function.\n         * Use it with `<yaga-geojson [styler]=\"someValue\">`\n         *\n         * *Note: The function can follow the `IGeoJSONStylerFn` interface. It enhances the leaflet ones with the default\n         * style as second parameter*\n         * @link http://leafletjs.com/reference-1.2.0.html#geojson-style Original Leaflet documentation\n         */\n        set: function (stylerFn) {\n            this.middleware.styler = stylerFn;\n            this.redraw();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GeoJSONDirective.prototype, \"defaultStyle\", {\n        get: function () {\n            return this.middleware.defaultStyle; // There is a fallback default style\n        },\n        /**\n         * Input for the default style.\n         * Use it with `<yaga-geojson [defaultStyle]=\"someValue\">`\n         *\n         * *Note: Leaflet does not provide a default style, it just provides a style function!*\n         */\n        set: function (style) {\n            this.middleware.defaultStyle = style;\n            this.redraw();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Method to apply changes to the geometries\n     */\n    GeoJSONDirective.prototype.redraw = function () {\n        if (this.initialized) {\n            this.initialized = false;\n            var data = this.data;\n            _super.prototype.clearLayers.call(this);\n            _super.prototype.addData.call(this, data);\n            this.initialized = true;\n        }\n    };\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"dataChange\", void 0);\n    __decorate([\n        core_1.Output(\"add\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"addEvent\", void 0);\n    __decorate([\n        core_1.Output(\"remove\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"removeEvent\", void 0);\n    __decorate([\n        core_1.Output(\"popupopen\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"popupopenEvent\", void 0);\n    __decorate([\n        core_1.Output(\"popupclose\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"popupcloseEvent\", void 0);\n    __decorate([\n        core_1.Output(\"tooltipopen\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"tooltipopenEvent\", void 0);\n    __decorate([\n        core_1.Output(\"tooltipclose\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"tooltipcloseEvent\", void 0);\n    __decorate([\n        core_1.Output(\"click\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"clickEvent\", void 0);\n    __decorate([\n        core_1.Output(\"dblclick\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"dblclickEvent\", void 0);\n    __decorate([\n        core_1.Output(\"mousedown\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"mousedownEvent\", void 0);\n    __decorate([\n        core_1.Output(\"mouseover\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"mouseoverEvent\", void 0);\n    __decorate([\n        core_1.Output(\"mouseout\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"mouseoutEvent\", void 0);\n    __decorate([\n        core_1.Output(\"contextmenu\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"contextmenuEvent\", void 0);\n    __decorate([\n        core_1.Output(\"onEachFeature\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], GeoJSONDirective.prototype, \"onEachFeatureEvent\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], GeoJSONDirective.prototype, \"data\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], GeoJSONDirective.prototype, \"filter\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], GeoJSONDirective.prototype, \"pointToLayer\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], GeoJSONDirective.prototype, \"styler\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], GeoJSONDirective.prototype, \"defaultStyle\", null);\n    GeoJSONDirective = __decorate([\n        core_1.Directive({\n            providers: [layer_group_provider_1.LayerGroupProvider, layer_provider_1.LayerProvider],\n            selector: \"yaga-geojson\",\n        }),\n        __param(0, core_1.SkipSelf()),\n        __metadata(\"design:paramtypes\", [layer_group_provider_1.LayerGroupProvider,\n            layer_group_provider_1.LayerGroupProvider,\n            layer_provider_1.LayerProvider])\n    ], GeoJSONDirective);\n    return GeoJSONDirective;\n}(leaflet_1.GeoJSON));\nexports.GeoJSONDirective = GeoJSONDirective;\n"]}