{"version":3,"file":"wms-layer.directive.d.ts","sources":["wms-layer.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy } from \"@angular/core\";\nimport { LatLngBoundsExpression, LeafletEvent, LeafletMouseEvent, Point, PopupEvent, TileErrorEvent, TileEvent, TileLayer, TooltipEvent, WMSParams } from \"leaflet\";\nimport { LayerGroupProvider } from \"./layer-group.provider\";\nimport { LayerProvider } from \"./layer.provider\";\n/**\n * Angular2 directive for Leaflet WMS-layers.\n *\n * *You can use this directive in an Angular2 template after importing `YagaModule`.*\n *\n * How to use in a template:\n * ```html\n * <yaga-map>\n *     <yaga-wms-layer\n *         [(url)]=\"...\"\n *         [(display)]=\"...\"\n *         [(opacity)]=\"...\"\n *         [(zIndex)]=\"...\"\n *         [(layers)]=\"...\"\n *         [(styles)]=\"...\"\n *         [(format)]=\"...\"\n *         [(version)]=\"...\"\n *         [(transparent)]=\"...\"\n *\n *         (add)=\"...\"\n *         (remove)=\"...\"\n *         (popupopen)=\"...\"\n *         (popupclose)=\"...\"\n *         (tooltipopen)=\"...\"\n *         (tooltipclose)=\"...\"\n *         (click)=\"...\"\n *         (dblclick)=\"...\"\n *         (mousedown)=\"...\"\n *         (mouseover)=\"...\"\n *         (mouseout)=\"...\"\n *         (contextmenu)=\"...\"\n *         (loading)=\"...\"\n *         (tileunload)=\"...\"\n *         (tileloadstart)=\"...\"\n *         (tileerror)=\"...\"\n *         (tileload)=\"...\"\n *         (load)=\"...\"\n *\n *         [tileSize]=\"...\"\n *         [updateWhenIdle]=\"...\"\n *         [updateWhenZooming]=\"...\"\n *         [updateInterval]=\"...\"\n *         [bounds]=\"...\"\n *         [noWrap]=\"...\"\n *         [className]=\"...\"\n *         [keepBuffer]=\"...\"\n *         [maxZoom]=\"...\"\n *         [minZoom]=\"...\"\n *         [maxNativeZoom]=\"...\"\n *         [minNativeZoom]=\"...\"\n *         [subdomains]=\"...\"\n *         [errorTileUrl]=\"...\"\n *         [zoomOffset]=\"...\"\n *         [tms]=\"...\"\n *         [zoomReverse]=\"...\"\n *         [detectRetina]=\"...\"\n *         [crossOrigin]=\"...\"\n *         [attribution]=\"...\">\n *     </yaga-tile-layer>\n * </yaga-map>\n * ```\n *\n * @link http://leafletjs.com/reference-1.2.0.html#tilelayer Original Leaflet documentation\n * @link https://leaflet-ng2.yagajs.org/latest/browser-test?grep=Tile-Layer%20Directive Unit-Test\n * @link https://leaflet-ng2.yagajs.org/latest/coverage/lcov-report/lib/tile-layer.directive.js.html Test coverage\n * @link https://leaflet-ng2.yagajs.org/latest/typedoc/classes/tilelayerdirective.html API documentation\n * @example https://leaflet-ng2.yagajs.org/latest/examples/tile-layer-directive\n */\nexport declare class WmsLayerDirective extends TileLayer.WMS implements OnDestroy {\n    protected layerGroupProvider: LayerGroupProvider;\n    /**\n     * Two-Way bound property for the URL.\n     * Use it with `<yaga-tile-layer [(url)]=\"someValue\">` or `<yaga-tile-layer (urlChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-seturl Original Leaflet documentation\n     */\n    urlChange: EventEmitter<string>;\n    /**\n     * Two-Way bound property for the display status of the layer.\n     * Use it with `<yaga-tile-layer [(display)]=\"someValue\">`\n     * or `<yaga-tile-layer (displayChange)=\"processEvent($event)\">`\n     */\n    displayChange: EventEmitter<boolean>;\n    /**\n     * Two-Way bound property for the opacity of the layer.\n     * Use it with `<yaga-tile-layer [(opacity)]=\"someValue\">`\n     * or `<yaga-tile-layer (opacityChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-opacity Original Leaflet documentation\n     */\n    opacityChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the zIndex of the layer.\n     * Use it with `<yaga-tile-layer [(zIndex)]=\"someValue\">`\n     * or `<yaga-tile-layer (zIndexChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-setzindex Original Leaflet documentation\n     */\n    zIndexChange: EventEmitter<number>;\n    layersChange: EventEmitter<string[]>;\n    stylesChange: EventEmitter<string[]>;\n    formatChange: EventEmitter<string>;\n    versionChange: EventEmitter<string>;\n    transparentChange: EventEmitter<boolean>;\n    /**\n     * From leaflet fired add event.\n     * Use it with `<yaga-tile-layer (add)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-add Original Leaflet documentation\n     */\n    addEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired remove event.\n     * Use it with `<yaga-tile-layer (remove)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-remove Original Leaflet documentation\n     */\n    removeEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired popupopen event.\n     * Use it with `<yaga-tile-layer (popupopen)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-popupopen Original Leaflet documentation\n     */\n    popupopenEvent: EventEmitter<PopupEvent>;\n    /**\n     * From leaflet fired popupclose event.\n     * Use it with `<yaga-tile-layer (popupclose)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-popupclose Original Leaflet documentation\n     */\n    popupcloseEvent: EventEmitter<PopupEvent>;\n    /**\n     * From leaflet fired tooltipopen event.\n     * Use it with `<yaga-tile-layer (tooltipopen)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-tooltipopen Original Leaflet documentation\n     */\n    tooltipopenEvent: EventEmitter<TooltipEvent>;\n    /**\n     * From leaflet fired tooltipclose event.\n     * Use it with `<yaga-tile-layer (tooltipclose)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-tooltipclose Original Leaflet documentation\n     */\n    tooltipcloseEvent: EventEmitter<TooltipEvent>;\n    /**\n     * From leaflet fired click event.\n     * Use it with `<yaga-tile-layer (click)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-click Original Leaflet documentation\n     */\n    clickEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired dblclick event.\n     * Use it with `<yaga-tile-layer (dblclick)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-dblclick Original Leaflet documentation\n     */\n    dblclickEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mousedown event.\n     * Use it with `<yaga-tile-layer (mousedown)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-mousedown Original Leaflet documentation\n     */\n    mousedownEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mouseover event.\n     * Use it with `<yaga-tile-layer (mouseover)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-mouseover Original Leaflet documentation\n     */\n    mouseoverEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mouseout event.\n     * Use it with `<yaga-tile-layer (mouseout)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-mouseout Original Leaflet documentation\n     */\n    mouseoutEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired contextmenu event.\n     * Use it with `<yaga-tile-layer (contextmenu)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-contextmenu Original Leaflet documentation\n     */\n    contextmenuEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired loading event.\n     * Use it with `<yaga-tile-layer (loading)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-loading Original Leaflet documentation\n     */\n    loadingEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired tileunload event.\n     * Use it with `<yaga-tile-layer (tileunload)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-tileunload Original Leaflet documentation\n     */\n    tileunloadEvent: EventEmitter<TileEvent>;\n    /**\n     * From leaflet fired tileloadstart event.\n     * Use it with `<yaga-tile-layer (tileloadstart)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-tileloadstart Original Leaflet documentation\n     */\n    tileloadstartEvent: EventEmitter<TileEvent>;\n    /**\n     * From leaflet fired tileerror event.\n     * Use it with `<yaga-tile-layer (tileerror)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-tileerror Original Leaflet documentation\n     */\n    tileerrorEvent: EventEmitter<TileErrorEvent>;\n    /**\n     * From leaflet fired tileload event.\n     * Use it with `<yaga-tile-layer (tileload)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-tileload Original Leaflet documentation\n     */\n    tileloadEvent: EventEmitter<TileEvent>;\n    /**\n     * From leaflet fired load event.\n     * Use it with `<yaga-tile-layer (load)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-load Original Leaflet documentation\n     */\n    loadEvent: EventEmitter<LeafletEvent>;\n    constructor(layerGroupProvider: LayerGroupProvider, layerProvider: LayerProvider);\n    /**\n     * This function gets called from Angular on destroy of the html-component.\n     * @link https://angular.io/docs/ts/latest/api/core/index/OnDestroy-class.html\n     */\n    ngOnDestroy(): void;\n    /**\n     * Derived method of the original setUrl method.\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-seturl Original Leaflet documentation\n     */\n    setUrl(url: string, noRedraw?: boolean): this;\n    /**\n     * Two-Way bound property for the URL.\n     * Use it with `<yaga-tile-layer [(url)]=\"someValue\">` or `<yaga-tile-layer [url]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-seturl Original Leaflet documentation\n     */\n    url: string;\n    /**\n     * Derived method of the original setOpacity method.\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-setopacity Original Leaflet documentation\n     */\n    setOpacity(val: number): this;\n    /**\n     * Two-Way bound property for the opacity.\n     * Use it with `<yaga-tile-layer [(opacity)]=\"someValue\">` or `<yaga-tile-layer [opacity]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-setopacity Original Leaflet documentation\n     */\n    opacity: number | undefined;\n    /**\n     * Two-Way bound property for the display status of the layer.\n     * Use it with `<yaga-tile-layer [(display)]=\"someValue\">` or `<yaga-tile-layer [display]=\"someValue\">`\n     */\n    /**\n    * Two-Way bound property for the display status of the layer.\n    * Use it with `<yaga-tile-layer [(display)]=\"someValue\">` or `<yaga-tile-layer [display]=\"someValue\">`\n    */\n    display: boolean;\n    /**\n     * Derived method of the original setZIndexmethod.\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-setzindex Original Leaflet documentation\n     */\n    setZIndex(val: number): this;\n    /**\n     * Two-Way bound property for the zIndex.\n     * Use it with `<yaga-tile-layer [(zIndex)]=\"someValue\">` or `<yaga-tile-layer [zIndex]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-setzindex Original Leaflet documentation\n     */\n    zIndex: number | undefined;\n    /**\n     * Input for the tileSize.\n     * Use it with `<yaga-tile-layer [tileSize]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-tileSize Original Leaflet documentation\n     */\n    tileSize: Point;\n    /**\n     * Input for the updateWhenIdle.\n     * Use it with `<yaga-tile-layer [updateWhenIdle]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-updatewhenidle Original Leaflet documentation\n     */\n    updateWhenIdle: boolean;\n    /**\n     * Input for the updateWhenZooming.\n     * Use it with `<yaga-tile-layer [updateWhenZooming]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-updatewhenzooming Original Leaflet documentation\n     */\n    updateWhenZooming: boolean;\n    /**\n     * Input for the updateInterval.\n     * Use it with `<yaga-tile-layer [updateInterval]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-updateinterval Original Leaflet documentation\n     */\n    updateInterval: number | undefined;\n    /**\n     * Input for the bounds.\n     * Use it with `<yaga-tile-layer [bounds]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-bounds Original Leaflet documentation\n     */\n    bounds: LatLngBoundsExpression | undefined;\n    /**\n     * Input for the noWrap.\n     * Use it with `<yaga-tile-layer [noWrap]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-nowrap Original Leaflet documentation\n     */\n    noWrap: boolean;\n    /**\n     * Input for the className.\n     * Use it with `<yaga-tile-layer [className]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-classname Original Leaflet documentation\n     */\n    className: string | undefined;\n    /**\n     * Input for the keepBuffer.\n     * Use it with `<yaga-tile-layer [keepBuffer]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-keepbuffer Original Leaflet documentation\n     */\n    keepBuffer: number | undefined;\n    /**\n     * Input for the maxZoom.\n     * Use it with `<yaga-tile-layer [maxZoom]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-maxzoom Original Leaflet documentation\n     */\n    maxZoom: number | undefined;\n    /**\n     * Input for the minZoom.\n     * Use it with `<yaga-tile-layer [minZoom]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-minzoom Original Leaflet documentation\n     */\n    minZoom: number | undefined;\n    /**\n     * Input for the maxNativeZoom.\n     * Use it with `<yaga-tile-layer [maxNativeZoom]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-maxnativezoom Original Leaflet documentation\n     */\n    maxNativeZoom: number | undefined;\n    /**\n     * Input for the minNativeZoom.\n     * Use it with `<yaga-tile-layer [minNativeZoom]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-minnativezoom Original Leaflet documentation\n     */\n    minNativeZoom: number | undefined;\n    /**\n     * Input for the subdomains.\n     * Use it with `<yaga-tile-layer [subdomains]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-subdomains Original Leaflet documentation\n     */\n    subdomains: string[];\n    /**\n     * Input for the errorTileUrl.\n     * Use it with `<yaga-tile-layer [errorTileUrl]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-errortileurl Original Leaflet documentation\n     */\n    errorTileUrl: string | undefined;\n    /**\n     * Input for the zoomOffset.\n     * Use it with `<yaga-tile-layer [zoomOffset]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-zoomoffset Original Leaflet documentation\n     */\n    zoomOffset: number | undefined;\n    /**\n     * Input for the tms.\n     * Use it with `<yaga-tile-layer [tms]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-tms Original Leaflet documentation\n     */\n    tms: boolean;\n    /**\n     * Input for the zoomReverse.\n     * Use it with `<yaga-tile-layer [zoomReverse]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-zoomreverse Original Leaflet documentation\n     */\n    zoomReverse: boolean;\n    /**\n     * Input for the detectRetina.\n     * Use it with `<yaga-tile-layer [detectRetina]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-detectretina Original Leaflet documentation\n     */\n    detectRetina: boolean;\n    /**\n     * Input for the crossOrigin.\n     * Use it with `<yaga-tile-layer [crossOrigin]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#tilelayer-crossorigin Original Leaflet documentation\n     */\n    crossOrigin: boolean;\n    uppercase: boolean;\n    setParams(params: WMSParams, redraw?: boolean): this;\n    layers: string[];\n    styles: string[];\n    format: string | undefined;\n    version: string | undefined;\n    transparent: boolean;\n    /**\n     * Input for the attribution.\n     * Use it with `<yaga-wms-layer [attribution]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.0.2.html#wmslayer-attribution Original Leaflet documentation\n     */\n    attribution: string;\n}\n"]}