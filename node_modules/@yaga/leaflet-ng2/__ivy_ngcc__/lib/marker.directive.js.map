{"version":3,"file":"marker.directive.js","sources":["marker.directive.js"],"names":[],"mappingskCAKO;AACP;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAwB;AACxB;AACA;AACA;AACA","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar leaflet_1 = require(\"leaflet\");\nvar layer_group_provider_1 = require(\"./layer-group.provider\");\nvar layer_provider_1 = require(\"./layer.provider\");\nvar marker_provider_1 = require(\"./marker.provider\");\n/**\n * Angular2 directive for markers of Leaflet.\n *\n * *You can use this directive in an Angular2 template after importing `YagaModule`.*\n *\n * How to use in a template:\n * ```html\n * <yaga-map>\n *     <yaga-marker\n *         [(draggable)]=\"...\"\n *         [(display)]=\"...\"\n *         [(opacity)]=\"...\"\n *         [(lat)]=\"...\"\n *         [(lng)]=\"...\"\n *         [(position)]=\"...\"\n *         [(zIndexOffset)]=\"...\"\n *         [(icon)]=\"...\"\n *\n *         (dragend)=\"...\"\n *         (dragstart)=\"...\"\n *         (movestart)=\"...\"\n *         (drag)=\"...\"\n *         (moveend)=\"...\"\n *         (add)=\"...\"\n *         (remove)=\"...\"\n *         (popupopen)=\"...\"\n *         (popupclose)=\"...\"\n *         (tooltipopen)=\"...\"\n *         (tooltipclose)=\"...\"\n *         (click)=\"...\"\n *         (dblclick)=\"...\"\n *         (mousedown)=\"...\"\n *         (mouseover)=\"...\"\n *         (mouseout)=\"...\"\n *         (contextmenu)=\"...\"\n *\n *         [title]=\"...\"\n *         [alt]=\"...\"\n *         >\n *     </yaga-marker>\n * </yaga-map>\n * ```\n *\n * @link http://leafletjs.com/reference-1.2.0.html#marker Original Leaflet documentation\n * @link https://leaflet-ng2.yagajs.org/latest/browser-test?grep=Marker%20Directive Unit-Test\n * @link https://leaflet-ng2.yagajs.org/latest/coverage/lcov-report/lib/marker.directive.js.html\n * Test coverage\n * @link https://leaflet-ng2.yagajs.org/latest/typedoc/classes/marker.directive.js.html API documentation\n * @example https://leaflet-ng2.yagajs.org/latest/examples/marker-directive/\n */\nvar MarkerDirective = /** @class */ (function (_super) {\n    __extends(MarkerDirective, _super);\n    function MarkerDirective(layerGroupProvider, layerProvider, markerProvider) {\n        var _this = _super.call(this, [0, 0]) || this;\n        _this.layerGroupProvider = layerGroupProvider;\n        /**\n         * Two-Way bound property for the latlng-position of the geometry.\n         * Use it with `<yaga-marker [(position)]=\"someValue\">`\n         * or `<yaga-marker (positionChange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n         */\n        _this.positionChange = new core_1.EventEmitter();\n        /**\n         * Two-Way bound property for the latitude of the geometry.\n         * Use it with `<yaga-marker [(lat)]=\"someValue\">`\n         * or `<yaga-marker (latChange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n         */\n        _this.latChange = new core_1.EventEmitter();\n        /**\n         * Two-Way bound property for the longitude of the geometry.\n         * Use it with `<yaga-marker [(lng)]=\"someValue\">`\n         * or `<yaga-marker (lngChange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n         */\n        _this.lngChange = new core_1.EventEmitter();\n        /**\n         * Two-Way bound property for the opacity of the geometry.\n         * Use it with `<yaga-marker [(opacity)]=\"someValue\">`\n         * or `<yaga-marker (opacityChange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-setopacity Original Leaflet documentation\n         */\n        _this.opacityChange = new core_1.EventEmitter();\n        /**\n         * Two-Way bound property for the display status of the geometry.\n         * Use it with `<yaga-marker [(display)]=\"someValue\">`\n         * or `<yaga-marker (displayChange)=\"processEvent($event)\">`\n         */\n        _this.displayChange = new core_1.EventEmitter();\n        /**\n         * Two-Way bound property for the offset of the zIndex.\n         * Use it with `<yaga-marker [(zIndexOffset)]=\"someValue\">`\n         * or `<yaga-marker (zIndexOffsetChange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.3.0.html#marker-zindexoffset Original Leaflet documentation\n         */\n        _this.zIndexOffsetChange = new core_1.EventEmitter();\n        /**\n         * Two-Way bound property for the draggable state.\n         * Use it with `<yaga-marker [(draggable)]=\"someValue\">`\n         * or `<yaga-marker (draggableChange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.3.0.html#marker-dragging Original Leaflet documentation\n         */\n        _this.draggableChange = new core_1.EventEmitter();\n        /**\n         * Two-Way bound property for the icon.\n         * Use it with `<yaga-marker [(icon)]=\"someValue\">`\n         * or `<yaga-marker (iconChange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.3.0.html#marker-seticon Original Leaflet documentation\n         */\n        _this.iconChange = new core_1.EventEmitter();\n        _this.tooltipOpenedChange = new core_1.EventEmitter();\n        _this.popupOpenedChange = new core_1.EventEmitter();\n        /**\n         * From leaflet fired add event.\n         * Use it with `<yaga-marker (dragend)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-dragend Original Leaflet documentation\n         */\n        _this.dragendEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired add event.\n         * Use it with `<yaga-marker (dragstart)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-dragstart Original Leaflet documentation\n         */\n        _this.dragstartEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired add event.\n         * Use it with `<yaga-marker (movestart)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-movestart Original Leaflet documentation\n         */\n        _this.movestartEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired add event.\n         * Use it with `<yaga-marker (drag)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-drag Original Leaflet documentation\n         */\n        _this.dragEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired add event.\n         * Use it with `<yaga-marker (moveend)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-moveend Original Leaflet documentation\n         */\n        _this.moveendEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired add event.\n         * Use it with `<yaga-marker (add)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-add Original Leaflet documentation\n         */\n        _this.addEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired remove event.\n         * Use it with `<yaga-marker (remove)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-remove Original Leaflet documentation\n         */\n        _this.removeEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired popupopen event.\n         * Use it with `<yaga-marker (popupopen)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-popupopen Original Leaflet documentation\n         */\n        _this.popupopenEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired popupclose event.\n         * Use it with `<yaga-marker (popupclose)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-popupclose Original Leaflet documentation\n         */\n        _this.popupcloseEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired tooltipopen event.\n         * Use it with `<yaga-marker (tooltipopen)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-tooltipopen Original Leaflet documentation\n         */\n        _this.tooltipopenEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired tooltipclose event.\n         * Use it with `<yaga-marker (tooltipclose)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-tooltipclose Original Leaflet documentation\n         */\n        _this.tooltipcloseEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired click event.\n         * Use it with `<yaga-marker (click)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-click Original Leaflet documentation\n         */\n        _this.clickEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired dblclick event.\n         * Use it with `<yaga-marker (dblclick)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-dblclick Original Leaflet documentation\n         */\n        _this.dblclickEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired mousedown event.\n         * Use it with `<yaga-marker (mousedown)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-mousedown Original Leaflet documentation\n         */\n        _this.mousedownEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired mouseover event.\n         * Use it with `<yaga-marker (mouseover)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-mouseover Original Leaflet documentation\n         */\n        _this.mouseoverEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired mouseout event.\n         * Use it with `<yaga-marker (mouseout)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-mouseout Original Leaflet documentation\n         */\n        _this.mouseoutEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired contextmenu event.\n         * Use it with `<yaga-marker (contextmenu)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-contextmenu Original Leaflet documentation\n         */\n        _this.contextmenuEvent = new core_1.EventEmitter();\n        /**\n         * Internal property to stop further processing while it is not initialized\n         */\n        _this.initialized = false;\n        layerProvider.ref = _this;\n        markerProvider.ref = _this;\n        _this.layerGroupProvider.ref.addLayer(_this);\n        _this.on(\"remove\", function () {\n            _this.displayChange.emit(false);\n        });\n        _this.on(\"add\", function () {\n            _this.displayChange.emit(true);\n        });\n        _this.on(\"drag\", function () {\n            _this.latChange.emit(_this.getLatLng().lat);\n            _this.lngChange.emit(_this.getLatLng().lng);\n            _this.positionChange.emit(_this.getLatLng());\n        });\n        // Events\n        _this.on(\"dragend\", function (event) {\n            _this.dragendEvent.emit(event);\n        });\n        _this.on(\"dragstart\", function (event) {\n            _this.dragstartEvent.emit(event);\n        });\n        _this.on(\"movestart\", function (event) {\n            _this.movestartEvent.emit(event);\n        });\n        _this.on(\"drag\", function (event) {\n            _this.dragEvent.emit(event);\n        });\n        _this.on(\"moveend\", function (event) {\n            _this.moveendEvent.emit(event);\n        });\n        _this.on(\"add\", function (event) {\n            _this.addEvent.emit(event);\n        });\n        _this.on(\"remove\", function (event) {\n            _this.removeEvent.emit(event);\n        });\n        _this.on(\"popupopen\", function (event) {\n            _this.popupopenEvent.emit(event);\n            _this.popupOpenedChange.emit(true);\n        });\n        _this.on(\"popupclose\", function (event) {\n            _this.popupcloseEvent.emit(event);\n            _this.popupOpenedChange.emit(false);\n        });\n        _this.on(\"tooltipopen\", function (event) {\n            _this.tooltipopenEvent.emit(event);\n            _this.tooltipOpenedChange.emit(true);\n        });\n        _this.on(\"tooltipclose\", function (event) {\n            _this.tooltipcloseEvent.emit(event);\n            _this.tooltipOpenedChange.emit(false);\n        });\n        _this.on(\"click\", function (event) {\n            _this.clickEvent.emit(event);\n        });\n        _this.on(\"dblclick\", function (event) {\n            _this.dblclickEvent.emit(event);\n        });\n        _this.on(\"mousedown\", function (event) {\n            _this.mousedownEvent.emit(event);\n        });\n        _this.on(\"mouseover\", function (event) {\n            _this.mouseoverEvent.emit(event);\n        });\n        _this.on(\"mouseout\", function (event) {\n            _this.mouseoutEvent.emit(event);\n        });\n        _this.on(\"contextmenu\", function (event) {\n            _this.contextmenuEvent.emit(event);\n        });\n        var oldDraggingEnable = _this.dragging.enable;\n        var oldDraggingDisable = _this.dragging.disable;\n        _this.dragging.enable = function () {\n            var val = oldDraggingEnable.call(_this.dragging);\n            _this.draggableChange.emit(true);\n            return val;\n        };\n        _this.dragging.disable = function () {\n            var val = oldDraggingDisable.call(_this.dragging);\n            _this.draggableChange.emit(false);\n            return val;\n        };\n        return _this;\n    }\n    /**\n     * Internal method that provides the initialization of the directive\n     */\n    MarkerDirective.prototype.ngAfterContentInit = function () {\n        this.initialized = true; // Otherwise lng gets overwritten to 0\n    };\n    /**\n     * Internal method to provide the removal of the layer in Leaflet, when removing it from the Angular template\n     */\n    MarkerDirective.prototype.ngOnDestroy = function () {\n        this.removeFrom(this.layerGroupProvider.ref);\n    };\n    Object.defineProperty(MarkerDirective.prototype, \"display\", {\n        get: function () {\n            var pane;\n            var container;\n            try {\n                pane = this.getPane();\n                container = this.getElement();\n            }\n            catch (err) {\n                /* istanbul ignore next */\n                return false;\n            }\n            /* tslint:disable:prefer-for-of */\n            for (var i = 0; i < pane.children.length; i += 1) {\n                /* tslint:enable */\n                /* istanbul ignore else */\n                if (pane.children[i] === container) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        /**\n         * Two-Way bound property for the display status of the layer.\n         * Use it with `<yaga-marker [(display)]=\"someValue\">` or `<yaga-marker [display]=\"someValue\">`\n         */\n        set: function (val) {\n            var isDisplayed = this.display;\n            if (isDisplayed === val) {\n                return;\n            }\n            var pane;\n            var container;\n            var map;\n            var events; // Dictionary of functions\n            var eventKeys;\n            try {\n                pane = this.getPane();\n                container = this.getElement();\n                map = this._map;\n                events = this.getEvents();\n                eventKeys = Object.keys(events);\n            }\n            catch (err) {\n                /* istanbul ignore next */\n                return;\n            }\n            if (val) {\n                // show layer\n                pane.appendChild(container);\n                for (var _i = 0, eventKeys_1 = eventKeys; _i < eventKeys_1.length; _i++) {\n                    var eventKey = eventKeys_1[_i];\n                    map.on(eventKey, events[eventKey], this);\n                }\n            }\n            else {\n                // hide layer\n                pane.removeChild(container);\n                for (var _a = 0, eventKeys_2 = eventKeys; _a < eventKeys_2.length; _a++) {\n                    var eventKey = eventKeys_2[_a];\n                    map.off(eventKey, events[eventKey], this);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Derived method of the original setLatLng method.\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n     */\n    MarkerDirective.prototype.setLatLng = function (val) {\n        _super.prototype.setLatLng.call(this, val);\n        if (this.initialized) {\n            this.positionChange.emit(this.getLatLng());\n            this.latChange.emit(this.getLatLng().lat);\n            this.lngChange.emit(this.getLatLng().lng);\n        }\n        return this;\n    };\n    Object.defineProperty(MarkerDirective.prototype, \"position\", {\n        get: function () {\n            return this.getLatLng();\n        },\n        /**\n         * Two-Way bound property for the position of the marker.\n         * Use it with `<yaga-marker [(position)]=\"someValue\">` or `<yaga-marker [position]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n         */\n        set: function (val) {\n            this.setLatLng(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerDirective.prototype, \"lat\", {\n        get: function () {\n            return this.getLatLng().lat;\n        },\n        /**\n         * Two-Way bound property for the position of the marker.\n         * Use it with `<yaga-marker [(lat)]=\"someValue\">` or `<yaga-marker [lat]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n         */\n        set: function (val) {\n            this.setLatLng([val, this.lng]);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerDirective.prototype, \"lng\", {\n        get: function () {\n            return this.getLatLng().lng;\n        },\n        /**\n         * Two-Way bound property for the position of the marker.\n         * Use it with `<yaga-marker [(lng)]=\"someValue\">` or `<yaga-marker [lng]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-setlatlng Original Leaflet documentation\n         */\n        set: function (val) {\n            this.setLatLng([this.lat, val]);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Derived method of the original setOpacity method.\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-setopacity Original Leaflet documentation\n     */\n    MarkerDirective.prototype.setOpacity = function (val) {\n        if (this.opacity === val) {\n            return this;\n        }\n        this.opacityChange.emit(val);\n        return _super.prototype.setOpacity.call(this, val);\n    };\n    Object.defineProperty(MarkerDirective.prototype, \"opacity\", {\n        get: function () {\n            return this.options.opacity;\n        },\n        /**\n         * Two-Way bound property for the opacity of the marker.\n         * Use it with `<yaga-marker [(opacity)]=\"someValue\">` or `<yaga-marker [opacity]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-setopacity Original Leaflet documentation\n         */\n        set: function (val) {\n            if (val === undefined) {\n                val = 1;\n            }\n            this.setOpacity(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerDirective.prototype, \"popupOpened\", {\n        get: function () {\n            return this.isPopupOpen();\n        },\n        /**\n         * Two-Way bound property for the state of the popup.\n         * Use it with `<yaga-marker [(popupOpened)]=\"someValue\">` or `<yaga-marker [popupOpened]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-openpopup Original Leaflet documentation\n         */\n        set: function (val) {\n            if (val) {\n                // It would not work without timeout!\n                this.openPopup();\n                return;\n            }\n            this.closePopup();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerDirective.prototype, \"tooltipOpened\", {\n        get: function () {\n            return this.isTooltipOpen();\n        },\n        /**\n         * Two-Way bound property for the state of the popup.\n         * Use it with `<yaga-marker [(tooltipOpened)]=\"someValue\">` or `<yaga-marker [tooltipOpened]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-opentooltip Original Leaflet documentation\n         */\n        set: function (val) {\n            if (val) {\n                this.openTooltip();\n                return;\n            }\n            this.closeTooltip();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Derived method of the original setIcon method.\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-seticon Original Leaflet documentation\n     */\n    MarkerDirective.prototype.setIcon = function (val) {\n        _super.prototype.setIcon.call(this, val);\n        this.iconChange.emit(val);\n        return this;\n    };\n    Object.defineProperty(MarkerDirective.prototype, \"icon\", {\n        get: function () {\n            return this.options.icon;\n        },\n        /**\n         * Two-Way bound property for the state of the popup.\n         * Use it with `<yaga-marker [(icon)]=\"someValue\">` or `<yaga-marker [icon]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-seticon Original Leaflet documentation\n         */\n        set: function (val) {\n            this.setIcon(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerDirective.prototype, \"draggable\", {\n        get: function () {\n            return this.dragging.enabled();\n        },\n        /**\n         * Two-Way bound property for the state of the dragging.\n         * Use it with `<yaga-marker [(draggable)]=\"someValue\">` or `<yaga-marker [draggable]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-dragging Original Leaflet documentation\n         */\n        set: function (val) {\n            if (val) {\n                this.dragging.enable();\n                return;\n            }\n            this.dragging.disable();\n            return;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Derived method of the original setZIndexOffset method.\n     * @link http://leafletjs.com/reference-1.2.0.html#marker-zindexoffset Original Leaflet documentation\n     */\n    MarkerDirective.prototype.setZIndexOffset = function (val) {\n        if (this.zIndexOffset === val) {\n            return this;\n        }\n        this.zIndexOffsetChange.emit(val);\n        return _super.prototype.setZIndexOffset.call(this, val);\n    };\n    Object.defineProperty(MarkerDirective.prototype, \"zIndexOffset\", {\n        get: function () {\n            return this.options.zIndexOffset || 0;\n        },\n        /**\n         * Two-Way bound property for the offset of the zIndex.\n         * Use it with `<yaga-marker [(draggable)]=\"someValue\">` or `<yaga-marker [draggable]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-zindexoffset Original Leaflet documentation\n         */\n        set: function (val) {\n            this.setZIndexOffset(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerDirective.prototype, \"title\", {\n        get: function () {\n            return this.getElement().getAttribute(\"title\") || \"\";\n        },\n        /**\n         * Input for the title.\n         * Use it with `<yaga-marker [title]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-title Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.title = val;\n            this.getElement().setAttribute(\"title\", val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MarkerDirective.prototype, \"alt\", {\n        get: function () {\n            return this.getElement().getAttribute(\"alt\") || undefined;\n        },\n        /**\n         * Input for the alternative text.\n         * Use it with `<yaga-marker [alt]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#marker-title Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.alt = val;\n            if (typeof val === \"string\") {\n                this.getElement().setAttribute(\"alt\", val);\n                return;\n            }\n            this.getElement().removeAttribute(\"alt\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"positionChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"latChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"lngChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"opacityChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"displayChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"zIndexOffsetChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"draggableChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"iconChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"tooltipOpenedChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"popupOpenedChange\", void 0);\n    __decorate([\n        core_1.Output(\"dragend\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"dragendEvent\", void 0);\n    __decorate([\n        core_1.Output(\"dragstart\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"dragstartEvent\", void 0);\n    __decorate([\n        core_1.Output(\"movestart\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"movestartEvent\", void 0);\n    __decorate([\n        core_1.Output(\"drag\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"dragEvent\", void 0);\n    __decorate([\n        core_1.Output(\"moveend\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"moveendEvent\", void 0);\n    __decorate([\n        core_1.Output(\"add\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"addEvent\", void 0);\n    __decorate([\n        core_1.Output(\"remove\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"removeEvent\", void 0);\n    __decorate([\n        core_1.Output(\"popupopen\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"popupopenEvent\", void 0);\n    __decorate([\n        core_1.Output(\"popupclose\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"popupcloseEvent\", void 0);\n    __decorate([\n        core_1.Output(\"tooltipopen\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"tooltipopenEvent\", void 0);\n    __decorate([\n        core_1.Output(\"tooltipclose\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"tooltipcloseEvent\", void 0);\n    __decorate([\n        core_1.Output(\"click\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"clickEvent\", void 0);\n    __decorate([\n        core_1.Output(\"dblclick\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"dblclickEvent\", void 0);\n    __decorate([\n        core_1.Output(\"mousedown\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"mousedownEvent\", void 0);\n    __decorate([\n        core_1.Output(\"mouseover\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"mouseoverEvent\", void 0);\n    __decorate([\n        core_1.Output(\"mouseout\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"mouseoutEvent\", void 0);\n    __decorate([\n        core_1.Output(\"contextmenu\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MarkerDirective.prototype, \"contextmenuEvent\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MarkerDirective.prototype, \"display\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", leaflet_1.LatLng),\n        __metadata(\"design:paramtypes\", [leaflet_1.LatLng])\n    ], MarkerDirective.prototype, \"position\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], MarkerDirective.prototype, \"lat\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], MarkerDirective.prototype, \"lng\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MarkerDirective.prototype, \"opacity\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MarkerDirective.prototype, \"popupOpened\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MarkerDirective.prototype, \"tooltipOpened\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MarkerDirective.prototype, \"icon\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MarkerDirective.prototype, \"draggable\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], MarkerDirective.prototype, \"zIndexOffset\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], MarkerDirective.prototype, \"title\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MarkerDirective.prototype, \"alt\", null);\n    MarkerDirective = __decorate([\n        core_1.Directive({\n            providers: [layer_provider_1.LayerProvider, marker_provider_1.MarkerProvider],\n            selector: \"yaga-marker\",\n        }),\n        __metadata(\"design:paramtypes\", [layer_group_provider_1.LayerGroupProvider,\n            layer_provider_1.LayerProvider,\n            marker_provider_1.MarkerProvider])\n    ], MarkerDirective);\n    return MarkerDirective;\n}(leaflet_1.Marker));\nexports.MarkerDirective = MarkerDirective;\n"]}