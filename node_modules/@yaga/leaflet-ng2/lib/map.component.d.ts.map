{"version":3,"file":"map.component.d.ts","sources":["map.component.d.ts"],"names":[],"mappingssourcesContent":["import { AfterViewInit, ElementRef, EventEmitter } from \"@angular/core\";\nimport { CRS, LatLngBounds, LatLngBoundsExpression, LayerEvent, LayersControlEvent, LeafletEvent, LeafletKeyboardEvent, LeafletMouseEvent, Map, PopupEvent, ResizeEvent, TooltipEvent, ZoomAnimEvent } from \"leaflet\";\nimport { LayerGroupProvider } from \"./layer-group.provider\";\nimport { MapProvider } from \"./map.provider\";\n/**\n * Angular2 root component for a Leaflet map\n *\n * *You can use this directive in an Angular2 template after importing `YagaModule`.*\n *\n * How to use in a template:\n * ```html\n * <yaga-map\n *     [(zoom)]=\"...\"\n *     [(lat)]=\"...\"\n *     [(lng)]=\"...\"\n *     [(minZoom)]=\"...\"\n *     [(maxZoom)]=\"...\"\n *     [(maxBounds)]=\"...\"\n *\n *     (baselayerchange)=\"...\"\n *     (overlayadd)=\"...\"\n *     (overlayremove)=\"...\"\n *     (layeradd)=\"...\"\n *     (layerremove)=\"...\"\n *     (zoomlevelschan)=\"...\"\n *     (resize)=\"...\"\n *     (unload)=\"...\"\n *     (viewreset)=\"...\"\n *     (load)=\"...\"\n *     (zoomstart)=\"...\"\n *     (movestart)=\"...\"\n *     (zoom)=\"...\"\n *     (move)=\"...\"\n *     (zoomend)=\"...\"\n *     (moveend)=\"...\"\n *     (popupopen)=\"...\"\n *     (popupclose)=\"...\"\n *     (autopanstart)=\"...\"\n *     (tooltipopen)=\"...\"\n *     (tooltipclose)=\"...\"\n *     (click)=\"...\"\n *     (dblclick)=\"...\"\n *     (mousedown)=\"...\"\n *     (mouseup)=\"...\"\n *     (mouseover)=\"...\"\n *     (mouseout)=\"...\"\n *     (mousemove)=\"...\"\n *     (contextmenu)=\"...\"\n *     (keypress)=\"...\"\n *     (preclick)=\"...\"\n *     (zoomanim)=\"...\"\n *\n *     [crs]=\"...\"\n *     [closePopupOnClick]=\"...\"\n *     [zoomSnap]=\"...\"\n *     [zoomDelta]=\"...\"\n *     [trackResize]=\"...\"\n *     [boxZoomEnabled]=\"...\"\n *     [doubleClickZoomEnabled]=\"...\"\n *     [draggingEnabled]=\"...\"\n *     [fadeAnimation]=\"...\"\n *     [markerZoomAnimation]=\"...\"\n *     [transform3DLimit]=\"...\"\n *     [zoomAnimation]=\"...\"\n *     [zoomAnimationThreshold]=\"...\"\n *     [inertia]=\"...\"\n *     [inertiaDeceleration]=\"...\"\n *     [inertiaMaxSpeed]=\"...\"\n *     [easeLinearity]=\"...\"\n *     [worldCopyJump]=\"...\"\n *     [maxBoundsViscosity]=\"...\"\n *     [keyboardEnabled]=\"...\"\n *     [keyboardPanDelta]=\"...\"\n *     [scrollWheelZoomEnabled]=\"...\"\n *     [wheelDebounceTime]=\"...\"\n *     [wheelPxPerZoomLevel]=\"...\"\n *     [tapEnabled]=\"...\"\n *     [tapTolerance]=\"...\"\n *     [bounceAtZoomLimits]=\"...\"\n *     [touchZoomEnabled]=\"...\">\n *     <!-- other yaga directives -->\n * </yaga-map>\n * ```\n *\n * You can use the following directives as child of this one:\n *\n * * yaga-attribution-control\n * * yaga-circle\n * * yaga-circle-marker\n * * yaga-geojson\n * * yaga-image-overlay\n * * yaga-marker\n * * yaga-polygon\n * * yaga-polyline\n * * yaga-rectangle\n * * yaga-scale-control\n * * yaga-tile-layer\n * * yaga-wms-layer\n * * yaga-zoom-control\n *\n * @link http://leafletjs.com/reference-1.2.0.html#tilelayer Original Leaflet documentation\n * @link https://leaflet-ng2.yagajs.org/latest/browser-test?grep=Tile-Layer%20Directive Unit-Test\n * @link https://leaflet-ng2.yagajs.org/latest/coverage/lcov-report/lib/tile-layer.directive.js.html Test coverage\n * @link https://leaflet-ng2.yagajs.org/latest/typedoc/classes/tilelayerdirective.html API documentation\n * @example https://leaflet-ng2.yagajs.org/latest/examples/tile-layer-directive\n */\nexport declare class MapComponent extends Map implements AfterViewInit {\n    /**\n     * Two-Way bound property for the zoom.\n     * Use it with `<yaga-map [(zoom)]=\"someValue\">` or `<yaga-map (zoomChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setzoom Original Leaflet documentation\n     */\n    zoomChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the center latitude.\n     * Use it with `<yaga-map [(lat)]=\"someValue\">` or `<yaga-map (latChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setview Original Leaflet documentation\n     */\n    latChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the center longitude.\n     * Use it with `<yaga-map [(lng)]=\"someValue\">` or `<yaga-map (lngChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setview Original Leaflet documentation\n     */\n    lngChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the minimal available zoom.\n     * Use it with `<yaga-map [(minZoom)]=\"someValue\">` or `<yaga-map (minZoomChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setminzoom Original Leaflet documentation\n     */\n    minZoomChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the maximal available zoom.\n     * Use it with `<yaga-map [(maxZoom)]=\"someValue\">` or `<yaga-map (maxZoomChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setmaxzoom Original Leaflet documentation\n     */\n    maxZoomChange: EventEmitter<number>;\n    /**\n     * Two-Way bound property for the bounds on the map.\n     * Use it with `<yaga-map [(maxBounds)]=\"someValue\">`\n     * or `<yaga-map (maxBoundsChange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setmaxbounds Original Leaflet documentation\n     */\n    maxBoundsChange: EventEmitter<LatLngBounds>;\n    /**\n     * From leaflet fired baselayerchange event.\n     * Use it with `<yaga-tile-layer (baselayerchange)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-baselayerchange Original Leaflet documentation\n     */\n    baselayerchangeEvent: EventEmitter<LayersControlEvent>;\n    /**\n     * From leaflet fired overlayadd event.\n     * Use it with `<yaga-tile-layer (overlayadd)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-overlayadd Original Leaflet documentation\n     */\n    overlayaddEvent: EventEmitter<LayersControlEvent>;\n    /**\n     * From leaflet fired overlayremove event.\n     * Use it with `<yaga-tile-layer (overlayremove)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-overlayremove Original Leaflet documentation\n     */\n    overlayremoveEvent: EventEmitter<LayersControlEvent>;\n    /**\n     * From leaflet fired layeradd event.\n     * Use it with `<yaga-tile-layer (layeradd)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-layeradd Original Leaflet documentation\n     */\n    layeraddEvent: EventEmitter<LayerEvent>;\n    /**\n     * From leaflet fired layerremove event.\n     * Use it with `<yaga-tile-layer (layerremove)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-layerremove Original Leaflet documentation\n     */\n    layerremoveEvent: EventEmitter<LayerEvent>;\n    /**\n     * From leaflet fired zoomlevelschan event.\n     * Use it with `<yaga-tile-layer (zoomlevelschan)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-zoomlevelschan Original Leaflet documentation\n     */\n    zoomlevelschangeEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired resize event.\n     * Use it with `<yaga-tile-layer (resize)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-resize Original Leaflet documentation\n     */\n    resizeEvent: EventEmitter<ResizeEvent>;\n    /**\n     * From leaflet fired unload event.\n     * Use it with `<yaga-tile-layer (unload)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-unload Original Leaflet documentation\n     */\n    unloadEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired viewreset event.\n     * Use it with `<yaga-tile-layer (viewreset)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-viewreset Original Leaflet documentation\n     */\n    viewresetEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired load event.\n     * Use it with `<yaga-tile-layer (load)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-load Original Leaflet documentation\n     */\n    loadEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired zoomstart event.\n     * Use it with `<yaga-tile-layer (zoomstart)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-zoomstart Original Leaflet documentation\n     */\n    zoomstartEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired movestart event.\n     * Use it with `<yaga-tile-layer (movestart)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-movestart Original Leaflet documentation\n     */\n    movestartEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired zoom event.\n     * Use it with `<yaga-tile-layer (zoom)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-zoom Original Leaflet documentation\n     */\n    zoomEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired move event.\n     * Use it with `<yaga-tile-layer (move)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-move Original Leaflet documentation\n     */\n    moveEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired zoomend event.\n     * Use it with `<yaga-tile-layer (zoomend)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-zoomend Original Leaflet documentation\n     */\n    zoomendEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired moveend event.\n     * Use it with `<yaga-tile-layer (moveend)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-moveend Original Leaflet documentation\n     */\n    moveendEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired (undocumented) boxzoomstart event.\n     * Use it with `<yaga-tile-layer (boxzoomstart)=\"processEvent($event)\">`\n     * @link https://github.com/Leaflet/Leaflet/blob/master/src/map/handler/Map.BoxZoom.js SourceCode\n     */\n    boxzoomstartEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired (undocumented) boxzoomend event.\n     * Use it with `<yaga-tile-layer (boxzoomend)=\"processEvent($event)\">`\n     * @link https://github.com/Leaflet/Leaflet/blob/master/src/map/handler/Map.BoxZoom.js SourceCode\n     */\n    boxzoomendEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired popupopen event.\n     * Use it with `<yaga-tile-layer (popupopen)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-popupopen Original Leaflet documentation\n     */\n    popupopenEvent: EventEmitter<PopupEvent>;\n    /**\n     * From leaflet fired popupclose event.\n     * Use it with `<yaga-tile-layer (popupclose)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-popupclose Original Leaflet documentation\n     */\n    popupcloseEvent: EventEmitter<PopupEvent>;\n    /**\n     * From leaflet fired autopanstart event.\n     * Use it with `<yaga-tile-layer (autopanstart)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-autopanstart Original Leaflet documentation\n     */\n    autopanstartEvent: EventEmitter<LeafletEvent>;\n    /**\n     * From leaflet fired tooltipopen event.\n     * Use it with `<yaga-tile-layer (tooltipopen)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-tooltipopen Original Leaflet documentation\n     */\n    tooltipopenEvent: EventEmitter<TooltipEvent>;\n    /**\n     * From leaflet fired tooltipclose event.\n     * Use it with `<yaga-tile-layer (tooltipclose)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-tooltipclose Original Leaflet documentation\n     */\n    tooltipcloseEvent: EventEmitter<TooltipEvent>;\n    /**\n     * From leaflet fired click event.\n     * Use it with `<yaga-tile-layer (click)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-click Original Leaflet documentation\n     */\n    clickEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired dblclick event.\n     * Use it with `<yaga-tile-layer (dblclick)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-dblclick Original Leaflet documentation\n     */\n    dblclickEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mousedown event.\n     * Use it with `<yaga-tile-layer (mousedown)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-mousedown Original Leaflet documentation\n     */\n    mousedownEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mouseup event.\n     * Use it with `<yaga-tile-layer (mouseup)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-mouseup Original Leaflet documentation\n     */\n    mouseupEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mouseover event.\n     * Use it with `<yaga-tile-layer (mouseover)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-mouseover Original Leaflet documentation\n     */\n    mouseoverEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mouseout event.\n     * Use it with `<yaga-tile-layer (mouseout)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-mouseout Original Leaflet documentation\n     */\n    mouseoutEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired mousemove event.\n     * Use it with `<yaga-tile-layer (mousemove)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-mousemove Original Leaflet documentation\n     */\n    mousemoveEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired contextmenu event.\n     * Use it with `<yaga-tile-layer (contextmenu)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-contextmenu Original Leaflet documentation\n     */\n    contextmenuEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired keypress event.\n     * Use it with `<yaga-tile-layer (keypress)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-keypress Original Leaflet documentation\n     */\n    keypressEvent: EventEmitter<LeafletKeyboardEvent>;\n    /**\n     * From leaflet fired preclick event.\n     * Use it with `<yaga-tile-layer (preclick)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-preclick Original Leaflet documentation\n     */\n    preclickEvent: EventEmitter<LeafletMouseEvent>;\n    /**\n     * From leaflet fired zoomanim event.\n     * Use it with `<yaga-tile-layer (zoomanim)=\"processEvent($event)\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-zoomanim Original Leaflet documentation\n     */\n    zoomanimEvent: EventEmitter<ZoomAnimEvent>;\n    private moveTimeout;\n    private isZooming;\n    constructor(elementRef: ElementRef, layerProvider: LayerGroupProvider, mapProvider: MapProvider);\n    /**\n     * This function gets called from Angular after initializing the html-component.\n     * @link https://angular.io/docs/ts/latest/api/core/index/AfterViewInit-class.html\n     */\n    ngAfterViewInit(): void;\n    /**\n     * Two-Way bound property for the zoom.\n     * Use it with `<yaga-map [(zoom)]=\"someValue\">` or `<yaga-map [zoom]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setzoom Original Leaflet documentation\n     */\n    zoom: number;\n    /**\n     * Two-Way bound property for the latitude.\n     * Use it with `<yaga-map [(lat)]=\"someValue\">` or `<yaga-map [lat]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setview Original Leaflet documentation\n     */\n    lat: number;\n    /**\n     * Two-Way bound property for the longitude.\n     * Use it with `<yaga-map [(lng)]=\"someValue\">` or `<yaga-map [lng]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setview Original Leaflet documentation\n     */\n    lng: number;\n    /**\n     * Derived method of the original setMinZoom method.\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setminzoom Original Leaflet documentation\n     */\n    setMinZoom(val: number): this;\n    /**\n     * Two-Way bound property for the minimal availabe zoom.\n     * Use it with `<yaga-map [(minZoom)]=\"someValue\">` or `<yaga-map [minZoom]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setminzoom Original Leaflet documentation\n     */\n    minZoom: number;\n    /**\n     * Derived method of the original setMaxZoom method.\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setmaxzoom Original Leaflet documentation\n     */\n    setMaxZoom(val: number): this;\n    /**\n     * Two-Way bound property for the maximal availabe zoom.\n     * Use it with `<yaga-map [(maxZoom)]=\"someValue\">` or `<yaga-map [maxZoom]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setmaxzoom Original Leaflet documentation\n     */\n    maxZoom: number;\n    /**\n     * Inherited function to provide event emitting.\n     */\n    setMaxBounds(bounds: LatLngBoundsExpression): this;\n    /**\n     * One-Way property for the Coordinate Reference System.\n     * Use it with `<yaga-map [crs]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-crs Original Leaflet documentation\n     */\n    crs: CRS;\n    /**\n     * Two-Way bound property for the maximal bounds.\n     * Use it with `<yaga-map [(maxBounds)]=\"someValue\">` or `<yaga-map [maxBounds]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-maxbounds Original Leaflet documentation\n     */\n    maxBounds: LatLngBounds;\n    /**\n     * Input for the closePopupOnClick.\n     * Use it with `<yaga-map [closePopupOnClick]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-closepopuponclick Original Leaflet documentation\n     */\n    closePopupOnClick: boolean | undefined;\n    /**\n     * Input for the zoomSnap.\n     * Use it with `<yaga-map [zoomSnap]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-zoomsnap Original Leaflet documentation\n     */\n    zoomSnap: number | undefined;\n    /**\n     * Input for the zoomDelta.\n     * Use it with `<yaga-map [zoomDelta]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-zoomdelta Original Leaflet documentation\n     */\n    zoomDelta: number | undefined;\n    /**\n     * Input for the trackResize.\n     * Use it with `<yaga-map [trackResize]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-trackresize Original Leaflet documentation\n     */\n    trackResize: boolean | undefined;\n    /**\n     * Input for the boxZoomEnabled.\n     * Use it with `<yaga-map [boxZoomEnabled]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-boxzoom Original Leaflet documentation\n     */\n    boxZoomEnabled: boolean;\n    /**\n     * Input for the doubleClickZoomEnabled.\n     * Use it with `<yaga-map [doubleClickZoomEnabled]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-doubleclickzoom Original Leaflet documentation\n     */\n    doubleClickZoomEnabled: boolean;\n    /**\n     * Input for the draggingEnabled.\n     * Use it with `<yaga-map [draggingEnabled]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-dragging Original Leaflet documentation\n     */\n    draggingEnabled: boolean;\n    /**\n     * Input for the fadeAnimation.\n     * Use it with `<yaga-map [fadeAnimation]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-fadeanimation Original Leaflet documentation\n     */\n    fadeAnimation: boolean;\n    /**\n     * Input for the markerZoomAnimation.\n     * Use it with `<yaga-map [markerZoomAnimation]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-markerzoomanimation Original Leaflet documentation\n     */\n    markerZoomAnimation: boolean;\n    /**\n     * Input for the transform3DLimit.\n     * Use it with `<yaga-map [transform3DLimit]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-transform3dlimit Original Leaflet documentation\n     */\n    transform3DLimit: number | undefined;\n    /**\n     * Input for the zoomAnimation.\n     * Use it with `<yaga-map [zoomAnimation]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-zoomanimation Original Leaflet documentation\n     */\n    zoomAnimation: boolean;\n    /**\n     * Input for the zoomAnimationThreshold.\n     * Use it with `<yaga-map [zoomAnimationThreshold]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-zoomanimationthreshold Original Leaflet documentation\n     */\n    zoomAnimationThreshold: number | undefined;\n    /**\n     * Input for the inertia.\n     * Use it with `<yaga-map [inertia]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-inertia Original Leaflet documentation\n     */\n    inertia: boolean;\n    /**\n     * Input for the inertiaDeceleration.\n     * Use it with `<yaga-map [inertiaDeceleration]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-inertiadeceleration Original Leaflet documentation\n     */\n    inertiaDeceleration: number | undefined;\n    /**\n     * Input for the inertiaMaxSpeed.\n     * Use it with `<yaga-map [inertiaMaxSpeed]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-inertiamaxspeed Original Leaflet documentation\n     */\n    inertiaMaxSpeed: number | undefined;\n    /**\n     * Input for the easeLinearity.\n     * Use it with `<yaga-map [easeLinearity]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-easelinearity Original Leaflet documentation\n     */\n    easeLinearity: number | undefined;\n    /**\n     * Input for the worldCopyJump.\n     * Use it with `<yaga-map [worldCopyJump]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-worldcopyjump Original Leaflet documentation\n     */\n    worldCopyJump: boolean;\n    /**\n     * Input for the maxBoundsViscosity.\n     * Use it with `<yaga-map [maxBoundsViscosity]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-maxboundsviscosity Original Leaflet documentation\n     */\n    maxBoundsViscosity: number | undefined;\n    /**\n     * Input for the keyboardEnabled.\n     * Use it with `<yaga-map [keyboardEnabled]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-keyboard Original Leaflet documentation\n     */\n    keyboardEnabled: boolean;\n    /**\n     * Input for the keyboardPanDelta.\n     * Use it with `<yaga-map [keyboardPanDelta]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-keyboardpandelta Original Leaflet documentation\n     */\n    keyboardPanDelta: number | undefined;\n    /**\n     * Input for the scrollWheelZoomEnabled.\n     * Use it with `<yaga-map [scrollWheelZoomEnabled]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-scrollwheelzoom Original Leaflet documentation\n     */\n    scrollWheelZoomEnabled: boolean;\n    /**\n     * Input for the wheelDebounceTime.\n     * Use it with `<yaga-map [wheelDebounceTime]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-wheeldebouncetime Original Leaflet documentation\n     */\n    wheelDebounceTime: number | undefined;\n    /**\n     * Input for the wheelPxPerZoomLevel.\n     * Use it with `<yaga-map [wheelPxPerZoomLevel]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-wheelpxperzoomlevel Original Leaflet documentation\n     */\n    wheelPxPerZoomLevel: number | undefined;\n    /**\n     * Input for the tapEnabled.\n     * Use it with `<yaga-map [tapEnabled]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-tap Original Leaflet documentation\n     */\n    tapEnabled: boolean;\n    /**\n     * Input for the tapTolerance.\n     * Use it with `<yaga-map [tapTolerance]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-taptolerance Original Leaflet documentation\n     */\n    tapTolerance: number | undefined;\n    /**\n     * Input for the bounceAtZoomLimits.\n     * Use it with `<yaga-map [bounceAtZoomLimits]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-bounceatzoomlimits Original Leaflet documentation\n     */\n    bounceAtZoomLimits: boolean;\n    /**\n     * Input for the touchZoomEnabled.\n     * Use it with `<yaga-map [touchZoomEnabled]=\"someValue\">`\n     * @link http://leafletjs.com/reference-1.2.0.html#map-touchzoom Original Leaflet documentation\n     */\n    touchZoomEnabled: boolean;\n}\n"]}