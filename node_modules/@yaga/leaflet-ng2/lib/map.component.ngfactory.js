"use strict";
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("@angular/core");
var i1 = require("./layer-group.provider");
var i2 = require("./map.provider");
var i3 = require("./map.component");
var styles_MapComponent = ["[_nghost-%COMP%] { display: block; }"];
var RenderType_MapComponent = i0.ɵcrt({ encapsulation: 0, styles: styles_MapComponent, data: {} });
exports.RenderType_MapComponent = RenderType_MapComponent;
function View_MapComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "span", [["style", "display: none"]], null, null, null, null, null)), i0.ɵncd(null, 0)], null, null); }
exports.View_MapComponent_0 = View_MapComponent_0;
function View_MapComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, "yaga-map", [], null, null, null, View_MapComponent_0, RenderType_MapComponent)), i0.ɵprd(512, null, i1.LayerGroupProvider, i1.LayerGroupProvider, []), i0.ɵprd(512, null, i2.MapProvider, i2.MapProvider, []), i0.ɵdid(3, 4243456, null, 0, i3.MapComponent, [i0.ElementRef, i1.LayerGroupProvider, i2.MapProvider], null, null)], null, null); }
exports.View_MapComponent_Host_0 = View_MapComponent_Host_0;
var MapComponentNgFactory = i0.ɵccf("yaga-map", i3.MapComponent, View_MapComponent_Host_0, { zoom: "zoom", lat: "lat", lng: "lng", minZoom: "minZoom", maxZoom: "maxZoom", crs: "crs", maxBounds: "maxBounds", closePopupOnClick: "closePopupOnClick", zoomSnap: "zoomSnap", zoomDelta: "zoomDelta", trackResize: "trackResize", boxZoomEnabled: "boxZoomEnabled", doubleClickZoomEnabled: "doubleClickZoomEnabled", draggingEnabled: "draggingEnabled", fadeAnimation: "fadeAnimation", markerZoomAnimation: "markerZoomAnimation", transform3DLimit: "transform3DLimit", zoomAnimation: "zoomAnimation", zoomAnimationThreshold: "zoomAnimationThreshold", inertia: "inertia", inertiaDeceleration: "inertiaDeceleration", inertiaMaxSpeed: "inertiaMaxSpeed", easeLinearity: "easeLinearity", worldCopyJump: "worldCopyJump", maxBoundsViscosity: "maxBoundsViscosity", keyboardEnabled: "keyboardEnabled", keyboardPanDelta: "keyboardPanDelta", scrollWheelZoomEnabled: "scrollWheelZoomEnabled", wheelDebounceTime: "wheelDebounceTime", wheelPxPerZoomLevel: "wheelPxPerZoomLevel", tapEnabled: "tapEnabled", tapTolerance: "tapTolerance", bounceAtZoomLimits: "bounceAtZoomLimits", touchZoomEnabled: "touchZoomEnabled" }, { zoomChange: "zoomChange", latChange: "latChange", lngChange: "lngChange", minZoomChange: "minZoomChange", maxZoomChange: "maxZoomChange", maxBoundsChange: "maxBoundsChange", baselayerchangeEvent: "baselayerchange", overlayaddEvent: "overlayadd", overlayremoveEvent: "overlayremove", layeraddEvent: "layeradd", layerremoveEvent: "layerremove", zoomlevelschangeEvent: "zoomlevelschange", resizeEvent: "resize", unloadEvent: "unload", viewresetEvent: "viewreset", loadEvent: "load", zoomstartEvent: "zoomstart", movestartEvent: "movestart", zoomEvent: "zoom", moveEvent: "move", zoomendEvent: "zoomend", moveendEvent: "moveend", boxzoomstartEvent: "boxzoomstart", boxzoomendEvent: "boxzoomend", popupopenEvent: "popupopen", popupcloseEvent: "popupclose", autopanstartEvent: "autopanstart", tooltipopenEvent: "tooltipopen", tooltipcloseEvent: "tooltipclose", clickEvent: "click", dblclickEvent: "dblclick", mousedownEvent: "mousedown", mouseupEvent: "mouseup", mouseoverEvent: "mouseover", mouseoutEvent: "mouseout", mousemoveEvent: "mousemove", contextmenuEvent: "contextmenu", keypressEvent: "keypress", preclickEvent: "preclick", zoomanimEvent: "zoomanim" }, ["*"]);
exports.MapComponentNgFactory = MapComponentNgFactory;
//# sourceMappingURL=map.component.ngfactory.js.map