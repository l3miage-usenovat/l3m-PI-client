{"version":3,"file":"map.component.js","sources":["map.component.js"],"names":[],"mappingsoBAAqB;AACrB;AACA;AACA;AACA","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar leaflet_1 = require(\"leaflet\");\nvar consts_1 = require(\"./consts\");\nvar layer_group_provider_1 = require(\"./layer-group.provider\");\nvar map_provider_1 = require(\"./map.provider\");\n/**\n * Angular2 root component for a Leaflet map\n *\n * *You can use this directive in an Angular2 template after importing `YagaModule`.*\n *\n * How to use in a template:\n * ```html\n * <yaga-map\n *     [(zoom)]=\"...\"\n *     [(lat)]=\"...\"\n *     [(lng)]=\"...\"\n *     [(minZoom)]=\"...\"\n *     [(maxZoom)]=\"...\"\n *     [(maxBounds)]=\"...\"\n *\n *     (baselayerchange)=\"...\"\n *     (overlayadd)=\"...\"\n *     (overlayremove)=\"...\"\n *     (layeradd)=\"...\"\n *     (layerremove)=\"...\"\n *     (zoomlevelschan)=\"...\"\n *     (resize)=\"...\"\n *     (unload)=\"...\"\n *     (viewreset)=\"...\"\n *     (load)=\"...\"\n *     (zoomstart)=\"...\"\n *     (movestart)=\"...\"\n *     (zoom)=\"...\"\n *     (move)=\"...\"\n *     (zoomend)=\"...\"\n *     (moveend)=\"...\"\n *     (popupopen)=\"...\"\n *     (popupclose)=\"...\"\n *     (autopanstart)=\"...\"\n *     (tooltipopen)=\"...\"\n *     (tooltipclose)=\"...\"\n *     (click)=\"...\"\n *     (dblclick)=\"...\"\n *     (mousedown)=\"...\"\n *     (mouseup)=\"...\"\n *     (mouseover)=\"...\"\n *     (mouseout)=\"...\"\n *     (mousemove)=\"...\"\n *     (contextmenu)=\"...\"\n *     (keypress)=\"...\"\n *     (preclick)=\"...\"\n *     (zoomanim)=\"...\"\n *\n *     [crs]=\"...\"\n *     [closePopupOnClick]=\"...\"\n *     [zoomSnap]=\"...\"\n *     [zoomDelta]=\"...\"\n *     [trackResize]=\"...\"\n *     [boxZoomEnabled]=\"...\"\n *     [doubleClickZoomEnabled]=\"...\"\n *     [draggingEnabled]=\"...\"\n *     [fadeAnimation]=\"...\"\n *     [markerZoomAnimation]=\"...\"\n *     [transform3DLimit]=\"...\"\n *     [zoomAnimation]=\"...\"\n *     [zoomAnimationThreshold]=\"...\"\n *     [inertia]=\"...\"\n *     [inertiaDeceleration]=\"...\"\n *     [inertiaMaxSpeed]=\"...\"\n *     [easeLinearity]=\"...\"\n *     [worldCopyJump]=\"...\"\n *     [maxBoundsViscosity]=\"...\"\n *     [keyboardEnabled]=\"...\"\n *     [keyboardPanDelta]=\"...\"\n *     [scrollWheelZoomEnabled]=\"...\"\n *     [wheelDebounceTime]=\"...\"\n *     [wheelPxPerZoomLevel]=\"...\"\n *     [tapEnabled]=\"...\"\n *     [tapTolerance]=\"...\"\n *     [bounceAtZoomLimits]=\"...\"\n *     [touchZoomEnabled]=\"...\">\n *     <!-- other yaga directives -->\n * </yaga-map>\n * ```\n *\n * You can use the following directives as child of this one:\n *\n * * yaga-attribution-control\n * * yaga-circle\n * * yaga-circle-marker\n * * yaga-geojson\n * * yaga-image-overlay\n * * yaga-marker\n * * yaga-polygon\n * * yaga-polyline\n * * yaga-rectangle\n * * yaga-scale-control\n * * yaga-tile-layer\n * * yaga-wms-layer\n * * yaga-zoom-control\n *\n * @link http://leafletjs.com/reference-1.2.0.html#tilelayer Original Leaflet documentation\n * @link https://leaflet-ng2.yagajs.org/latest/browser-test?grep=Tile-Layer%20Directive Unit-Test\n * @link https://leaflet-ng2.yagajs.org/latest/coverage/lcov-report/lib/tile-layer.directive.js.html Test coverage\n * @link https://leaflet-ng2.yagajs.org/latest/typedoc/classes/tilelayerdirective.html API documentation\n * @example https://leaflet-ng2.yagajs.org/latest/examples/tile-layer-directive\n */\nvar MapComponent = /** @class */ (function (_super) {\n    __extends(MapComponent, _super);\n    function MapComponent(elementRef, layerProvider, mapProvider) {\n        var _this = _super.call(this, elementRef.nativeElement, { attributionControl: false, zoomControl: false }) || this;\n        /**\n         * Two-Way bound property for the zoom.\n         * Use it with `<yaga-map [(zoom)]=\"someValue\">` or `<yaga-map (zoomChange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-setzoom Original Leaflet documentation\n         */\n        _this.zoomChange = new core_1.EventEmitter();\n        /**\n         * Two-Way bound property for the center latitude.\n         * Use it with `<yaga-map [(lat)]=\"someValue\">` or `<yaga-map (latChange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-setview Original Leaflet documentation\n         */\n        _this.latChange = new core_1.EventEmitter();\n        /**\n         * Two-Way bound property for the center longitude.\n         * Use it with `<yaga-map [(lng)]=\"someValue\">` or `<yaga-map (lngChange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-setview Original Leaflet documentation\n         */\n        _this.lngChange = new core_1.EventEmitter();\n        /**\n         * Two-Way bound property for the minimal available zoom.\n         * Use it with `<yaga-map [(minZoom)]=\"someValue\">` or `<yaga-map (minZoomChange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-setminzoom Original Leaflet documentation\n         */\n        _this.minZoomChange = new core_1.EventEmitter();\n        /**\n         * Two-Way bound property for the maximal available zoom.\n         * Use it with `<yaga-map [(maxZoom)]=\"someValue\">` or `<yaga-map (maxZoomChange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-setmaxzoom Original Leaflet documentation\n         */\n        _this.maxZoomChange = new core_1.EventEmitter();\n        /**\n         * Two-Way bound property for the bounds on the map.\n         * Use it with `<yaga-map [(maxBounds)]=\"someValue\">`\n         * or `<yaga-map (maxBoundsChange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-setmaxbounds Original Leaflet documentation\n         */\n        _this.maxBoundsChange = new core_1.EventEmitter();\n        /**\n         * From leaflet fired baselayerchange event.\n         * Use it with `<yaga-tile-layer (baselayerchange)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-baselayerchange Original Leaflet documentation\n         */\n        _this.baselayerchangeEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired overlayadd event.\n         * Use it with `<yaga-tile-layer (overlayadd)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-overlayadd Original Leaflet documentation\n         */\n        _this.overlayaddEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired overlayremove event.\n         * Use it with `<yaga-tile-layer (overlayremove)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-overlayremove Original Leaflet documentation\n         */\n        _this.overlayremoveEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired layeradd event.\n         * Use it with `<yaga-tile-layer (layeradd)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-layeradd Original Leaflet documentation\n         */\n        _this.layeraddEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired layerremove event.\n         * Use it with `<yaga-tile-layer (layerremove)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-layerremove Original Leaflet documentation\n         */\n        _this.layerremoveEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired zoomlevelschan event.\n         * Use it with `<yaga-tile-layer (zoomlevelschan)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-zoomlevelschan Original Leaflet documentation\n         */\n        _this.zoomlevelschangeEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired resize event.\n         * Use it with `<yaga-tile-layer (resize)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-resize Original Leaflet documentation\n         */\n        _this.resizeEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired unload event.\n         * Use it with `<yaga-tile-layer (unload)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-unload Original Leaflet documentation\n         */\n        _this.unloadEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired viewreset event.\n         * Use it with `<yaga-tile-layer (viewreset)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-viewreset Original Leaflet documentation\n         */\n        _this.viewresetEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired load event.\n         * Use it with `<yaga-tile-layer (load)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-load Original Leaflet documentation\n         */\n        _this.loadEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired zoomstart event.\n         * Use it with `<yaga-tile-layer (zoomstart)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-zoomstart Original Leaflet documentation\n         */\n        _this.zoomstartEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired movestart event.\n         * Use it with `<yaga-tile-layer (movestart)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-movestart Original Leaflet documentation\n         */\n        _this.movestartEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired zoom event.\n         * Use it with `<yaga-tile-layer (zoom)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-zoom Original Leaflet documentation\n         */\n        _this.zoomEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired move event.\n         * Use it with `<yaga-tile-layer (move)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-move Original Leaflet documentation\n         */\n        _this.moveEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired zoomend event.\n         * Use it with `<yaga-tile-layer (zoomend)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-zoomend Original Leaflet documentation\n         */\n        _this.zoomendEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired moveend event.\n         * Use it with `<yaga-tile-layer (moveend)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-moveend Original Leaflet documentation\n         */\n        _this.moveendEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired (undocumented) boxzoomstart event.\n         * Use it with `<yaga-tile-layer (boxzoomstart)=\"processEvent($event)\">`\n         * @link https://github.com/Leaflet/Leaflet/blob/master/src/map/handler/Map.BoxZoom.js SourceCode\n         */\n        _this.boxzoomstartEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired (undocumented) boxzoomend event.\n         * Use it with `<yaga-tile-layer (boxzoomend)=\"processEvent($event)\">`\n         * @link https://github.com/Leaflet/Leaflet/blob/master/src/map/handler/Map.BoxZoom.js SourceCode\n         */\n        _this.boxzoomendEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired popupopen event.\n         * Use it with `<yaga-tile-layer (popupopen)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-popupopen Original Leaflet documentation\n         */\n        _this.popupopenEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired popupclose event.\n         * Use it with `<yaga-tile-layer (popupclose)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-popupclose Original Leaflet documentation\n         */\n        _this.popupcloseEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired autopanstart event.\n         * Use it with `<yaga-tile-layer (autopanstart)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-autopanstart Original Leaflet documentation\n         */\n        _this.autopanstartEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired tooltipopen event.\n         * Use it with `<yaga-tile-layer (tooltipopen)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-tooltipopen Original Leaflet documentation\n         */\n        _this.tooltipopenEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired tooltipclose event.\n         * Use it with `<yaga-tile-layer (tooltipclose)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-tooltipclose Original Leaflet documentation\n         */\n        _this.tooltipcloseEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired click event.\n         * Use it with `<yaga-tile-layer (click)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-click Original Leaflet documentation\n         */\n        _this.clickEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired dblclick event.\n         * Use it with `<yaga-tile-layer (dblclick)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-dblclick Original Leaflet documentation\n         */\n        _this.dblclickEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired mousedown event.\n         * Use it with `<yaga-tile-layer (mousedown)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-mousedown Original Leaflet documentation\n         */\n        _this.mousedownEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired mouseup event.\n         * Use it with `<yaga-tile-layer (mouseup)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-mouseup Original Leaflet documentation\n         */\n        _this.mouseupEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired mouseover event.\n         * Use it with `<yaga-tile-layer (mouseover)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-mouseover Original Leaflet documentation\n         */\n        _this.mouseoverEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired mouseout event.\n         * Use it with `<yaga-tile-layer (mouseout)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-mouseout Original Leaflet documentation\n         */\n        _this.mouseoutEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired mousemove event.\n         * Use it with `<yaga-tile-layer (mousemove)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-mousemove Original Leaflet documentation\n         */\n        _this.mousemoveEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired contextmenu event.\n         * Use it with `<yaga-tile-layer (contextmenu)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-contextmenu Original Leaflet documentation\n         */\n        _this.contextmenuEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired keypress event.\n         * Use it with `<yaga-tile-layer (keypress)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-keypress Original Leaflet documentation\n         */\n        _this.keypressEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired preclick event.\n         * Use it with `<yaga-tile-layer (preclick)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-preclick Original Leaflet documentation\n         */\n        _this.preclickEvent = new core_1.EventEmitter();\n        /**\n         * From leaflet fired zoomanim event.\n         * Use it with `<yaga-tile-layer (zoomanim)=\"processEvent($event)\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-zoomanim Original Leaflet documentation\n         */\n        _this.zoomanimEvent = new core_1.EventEmitter();\n        _this.isZooming = false;\n        mapProvider.ref = _this;\n        layerProvider.ref = _this;\n        var moveFn = function () {\n            if (_this.isZooming) {\n                _this.moveTimeout = setTimeout(moveFn, consts_1.ANIMATION_DELAY);\n                return;\n            }\n            _this.latChange.emit(_this.lat);\n            _this.lngChange.emit(_this.lng);\n            _this.zoomChange.emit(_this.zoom);\n            _this.moveTimeout = undefined;\n        };\n        _this.setView([0, 0], 0);\n        elementRef.nativeElement.setAttribute(\"class\", elementRef.nativeElement.getAttribute(\"class\") + \" yaga-map\");\n        _this.on(\"move\", function () {\n            if (_this.moveTimeout) {\n                clearTimeout(_this.moveTimeout);\n            }\n            _this.moveTimeout = setTimeout(moveFn, consts_1.ANIMATION_DELAY);\n        });\n        _this.on(\"zoomstart\", function () {\n            _this.isZooming = true;\n        });\n        _this.on(\"zoomend\", function () {\n            _this.isZooming = false;\n            if (_this.moveTimeout) {\n                clearTimeout(_this.moveTimeout);\n            }\n            _this.moveTimeout = setTimeout(moveFn, consts_1.ANIMATION_DELAY);\n        });\n        _this.on(\"baselayerchange\", function (event) {\n            _this.baselayerchangeEvent.emit(event);\n        });\n        _this.on(\"overlayadd\", function (event) {\n            _this.overlayaddEvent.emit(event);\n        });\n        _this.on(\"overlayremove\", function (event) {\n            _this.overlayremoveEvent.emit(event);\n        });\n        _this.on(\"layeradd\", function (event) {\n            _this.layeraddEvent.emit(event);\n        });\n        _this.on(\"layerremove\", function (event) {\n            _this.layerremoveEvent.emit(event);\n        });\n        _this.on(\"zoomlevelschange\", function (event) {\n            _this.zoomlevelschangeEvent.emit(event);\n        });\n        _this.on(\"resize\", function (event) {\n            _this.resizeEvent.emit(event);\n        });\n        _this.on(\"unload\", function (event) {\n            _this.unloadEvent.emit(event);\n        });\n        _this.on(\"viewreset\", function (event) {\n            _this.viewresetEvent.emit(event);\n        });\n        _this.on(\"load\", function (event) {\n            _this.loadEvent.emit(event);\n        });\n        _this.on(\"zoomstart\", function (event) {\n            _this.zoomstartEvent.emit(event);\n        });\n        _this.on(\"movestart\", function (event) {\n            _this.movestartEvent.emit(event);\n        });\n        _this.on(\"zoom\", function (event) {\n            _this.zoomEvent.emit(event);\n        });\n        _this.on(\"move\", function (event) {\n            _this.moveEvent.emit(event);\n        });\n        _this.on(\"zoomend\", function (event) {\n            _this.zoomendEvent.emit(event);\n        });\n        _this.on(\"moveend\", function (event) {\n            _this.moveendEvent.emit(event);\n        });\n        _this.on(\"boxzoomstart\", function (event) {\n            _this.boxzoomstartEvent.emit(event);\n        });\n        _this.on(\"boxzoomend\", function (event) {\n            _this.boxzoomendEvent.emit(event);\n        });\n        _this.on(\"popupopen\", function (event) {\n            _this.popupopenEvent.emit(event);\n        });\n        _this.on(\"popupclose\", function (event) {\n            _this.popupcloseEvent.emit(event);\n        });\n        _this.on(\"autopanstart\", function (event) {\n            _this.autopanstartEvent.emit(event);\n        });\n        _this.on(\"tooltipopen\", function (event) {\n            _this.tooltipopenEvent.emit(event);\n        });\n        _this.on(\"tooltipclose\", function (event) {\n            _this.tooltipcloseEvent.emit(event);\n        });\n        _this.on(\"click\", function (event) {\n            _this.clickEvent.emit(event);\n        });\n        _this.on(\"dblclick\", function (event) {\n            _this.dblclickEvent.emit(event);\n        });\n        _this.on(\"mousedown\", function (event) {\n            _this.mousedownEvent.emit(event);\n        });\n        _this.on(\"mouseup\", function (event) {\n            _this.mouseupEvent.emit(event);\n        });\n        _this.on(\"mouseover\", function (event) {\n            _this.mouseoverEvent.emit(event);\n        });\n        _this.on(\"mouseout\", function (event) {\n            _this.mouseoutEvent.emit(event);\n        });\n        _this.on(\"mousemove\", function (event) {\n            _this.mousemoveEvent.emit(event);\n        });\n        _this.on(\"contextmenu\", function (event) {\n            _this.contextmenuEvent.emit(event);\n        });\n        _this.on(\"keypress\", function (event) {\n            _this.keypressEvent.emit(event);\n        });\n        _this.on(\"preclick\", function (event) {\n            _this.preclickEvent.emit(event);\n        });\n        _this.on(\"zoomanim\", function (event) {\n            _this.zoomanimEvent.emit(event);\n        });\n        return _this;\n    }\n    /**\n     * This function gets called from Angular after initializing the html-component.\n     * @link https://angular.io/docs/ts/latest/api/core/index/AfterViewInit-class.html\n     */\n    MapComponent.prototype.ngAfterViewInit = function () {\n        this.invalidateSize(false);\n    };\n    Object.defineProperty(MapComponent.prototype, \"zoom\", {\n        get: function () {\n            return this.getZoom();\n        },\n        /*setZoom(zoom: number, options?: ZoomPanOptions): this {\n         if (this.zoom === zoom) {\n         return;\n         }\n         this.zoomChange.emit(zoom);\n         return super.setZoom(zoom, options)\n         }*/\n        // already handled with moveend\n        // setView(center: LatLngExpression, zoom: number, options?: ZoomPanOptions): this {\n        /**\n         * Two-Way bound property for the zoom.\n         * Use it with `<yaga-map [(zoom)]=\"someValue\">` or `<yaga-map [zoom]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-setzoom Original Leaflet documentation\n         */\n        set: function (val) {\n            this.setZoom(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"lat\", {\n        get: function () {\n            return this.getCenter().lat;\n        },\n        /**\n         * Two-Way bound property for the latitude.\n         * Use it with `<yaga-map [(lat)]=\"someValue\">` or `<yaga-map [lat]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-setview Original Leaflet documentation\n         */\n        set: function (val) {\n            var coords = new leaflet_1.LatLng(val, this.getCenter().lng);\n            this.setView(coords, this.zoom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"lng\", {\n        get: function () {\n            return this.getCenter().lng;\n        },\n        /**\n         * Two-Way bound property for the longitude.\n         * Use it with `<yaga-map [(lng)]=\"someValue\">` or `<yaga-map [lng]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-setview Original Leaflet documentation\n         */\n        set: function (val) {\n            var coords = new leaflet_1.LatLng(this.getCenter().lat, val);\n            this.setView(coords, this.zoom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Derived method of the original setMinZoom method.\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setminzoom Original Leaflet documentation\n     */\n    MapComponent.prototype.setMinZoom = function (val) {\n        this.minZoomChange.emit(val);\n        return _super.prototype.setMinZoom.call(this, val);\n    };\n    Object.defineProperty(MapComponent.prototype, \"minZoom\", {\n        get: function () {\n            return this.getMinZoom();\n        },\n        /**\n         * Two-Way bound property for the minimal availabe zoom.\n         * Use it with `<yaga-map [(minZoom)]=\"someValue\">` or `<yaga-map [minZoom]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-setminzoom Original Leaflet documentation\n         */\n        set: function (val) {\n            this.setMinZoom(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Derived method of the original setMaxZoom method.\n     * @link http://leafletjs.com/reference-1.2.0.html#map-setmaxzoom Original Leaflet documentation\n     */\n    MapComponent.prototype.setMaxZoom = function (val) {\n        this.maxZoomChange.emit(val);\n        return _super.prototype.setMaxZoom.call(this, val);\n    };\n    Object.defineProperty(MapComponent.prototype, \"maxZoom\", {\n        get: function () {\n            return this.getMaxZoom();\n        },\n        /**\n         * Two-Way bound property for the maximal availabe zoom.\n         * Use it with `<yaga-map [(maxZoom)]=\"someValue\">` or `<yaga-map [maxZoom]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-setmaxzoom Original Leaflet documentation\n         */\n        set: function (val) {\n            this.setMaxZoom(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Inherited function to provide event emitting.\n     */\n    MapComponent.prototype.setMaxBounds = function (bounds) {\n        _super.prototype.setMaxBounds.call(this, bounds);\n        this.maxBoundsChange.emit(this.maxBounds);\n        return this;\n    };\n    Object.defineProperty(MapComponent.prototype, \"crs\", {\n        get: function () {\n            return this.options.crs;\n        },\n        /**\n         * One-Way property for the Coordinate Reference System.\n         * Use it with `<yaga-map [crs]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-crs Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.crs = val;\n            var keys = Object.keys(this._layers);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (typeof this._layers[key].redraw === \"function\") {\n                    this._layers[key].redraw();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"maxBounds\", {\n        get: function () {\n            return this.options.maxBounds;\n        },\n        /**\n         * Two-Way bound property for the maximal bounds.\n         * Use it with `<yaga-map [(maxBounds)]=\"someValue\">` or `<yaga-map [maxBounds]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-maxbounds Original Leaflet documentation\n         */\n        set: function (val) {\n            this.setMaxBounds(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"closePopupOnClick\", {\n        get: function () {\n            return this.options.closePopupOnClick;\n        },\n        // One-way Input\n        /**\n         * Input for the closePopupOnClick.\n         * Use it with `<yaga-map [closePopupOnClick]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-closepopuponclick Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.closePopupOnClick = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"zoomSnap\", {\n        get: function () {\n            return this.options.zoomSnap;\n        },\n        /**\n         * Input for the zoomSnap.\n         * Use it with `<yaga-map [zoomSnap]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-zoomsnap Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.zoomSnap = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"zoomDelta\", {\n        get: function () {\n            return this.options.zoomDelta;\n        },\n        /**\n         * Input for the zoomDelta.\n         * Use it with `<yaga-map [zoomDelta]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-zoomdelta Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.zoomDelta = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"trackResize\", {\n        get: function () {\n            return this.options.trackResize;\n        },\n        /**\n         * Input for the trackResize.\n         * Use it with `<yaga-map [trackResize]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-trackresize Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.trackResize = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"boxZoomEnabled\", {\n        get: function () {\n            return this.boxZoom.enabled();\n        },\n        // maybe 2way!?!\n        /**\n         * Input for the boxZoomEnabled.\n         * Use it with `<yaga-map [boxZoomEnabled]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-boxzoom Original Leaflet documentation\n         */\n        set: function (val) {\n            if (val) {\n                this.boxZoom.enable();\n                return;\n            }\n            this.boxZoom.disable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"doubleClickZoomEnabled\", {\n        get: function () {\n            return this.doubleClickZoom.enabled();\n        },\n        // maybe 2way!?!\n        /**\n         * Input for the doubleClickZoomEnabled.\n         * Use it with `<yaga-map [doubleClickZoomEnabled]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-doubleclickzoom Original Leaflet documentation\n         */\n        set: function (val) {\n            if (val) {\n                this.doubleClickZoom.enable();\n                return;\n            }\n            this.doubleClickZoom.disable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"draggingEnabled\", {\n        get: function () {\n            return this.dragging.enabled();\n        },\n        // maybe 2way!?!\n        /**\n         * Input for the draggingEnabled.\n         * Use it with `<yaga-map [draggingEnabled]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-dragging Original Leaflet documentation\n         */\n        set: function (val) {\n            if (val) {\n                this.dragging.enable();\n                return;\n            }\n            this.dragging.disable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"fadeAnimation\", {\n        get: function () {\n            return !!this.options.fadeAnimation;\n        },\n        /**\n         * Input for the fadeAnimation.\n         * Use it with `<yaga-map [fadeAnimation]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-fadeanimation Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.fadeAnimation = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"markerZoomAnimation\", {\n        get: function () {\n            return !!this.options.markerZoomAnimation;\n        },\n        /**\n         * Input for the markerZoomAnimation.\n         * Use it with `<yaga-map [markerZoomAnimation]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-markerzoomanimation Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.markerZoomAnimation = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"transform3DLimit\", {\n        get: function () {\n            return this.options.transform3DLimit;\n        },\n        /**\n         * Input for the transform3DLimit.\n         * Use it with `<yaga-map [transform3DLimit]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-transform3dlimit Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.transform3DLimit = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"zoomAnimation\", {\n        get: function () {\n            return !!this.options.zoomAnimation;\n        },\n        /**\n         * Input for the zoomAnimation.\n         * Use it with `<yaga-map [zoomAnimation]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-zoomanimation Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.zoomAnimation = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"zoomAnimationThreshold\", {\n        get: function () {\n            return this.options.zoomAnimationThreshold;\n        },\n        /**\n         * Input for the zoomAnimationThreshold.\n         * Use it with `<yaga-map [zoomAnimationThreshold]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-zoomanimationthreshold Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.zoomAnimationThreshold = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"inertia\", {\n        get: function () {\n            return !!this.options.inertia;\n        },\n        /**\n         * Input for the inertia.\n         * Use it with `<yaga-map [inertia]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-inertia Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.inertia = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"inertiaDeceleration\", {\n        get: function () {\n            return this.options.inertiaDeceleration;\n        },\n        /**\n         * Input for the inertiaDeceleration.\n         * Use it with `<yaga-map [inertiaDeceleration]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-inertiadeceleration Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.inertiaDeceleration = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"inertiaMaxSpeed\", {\n        get: function () {\n            return this.options.inertiaMaxSpeed;\n        },\n        /**\n         * Input for the inertiaMaxSpeed.\n         * Use it with `<yaga-map [inertiaMaxSpeed]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-inertiamaxspeed Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.inertiaMaxSpeed = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"easeLinearity\", {\n        get: function () {\n            return this.options.easeLinearity;\n        },\n        /**\n         * Input for the easeLinearity.\n         * Use it with `<yaga-map [easeLinearity]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-easelinearity Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.easeLinearity = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"worldCopyJump\", {\n        get: function () {\n            return !!this.options.worldCopyJump;\n        },\n        /**\n         * Input for the worldCopyJump.\n         * Use it with `<yaga-map [worldCopyJump]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-worldcopyjump Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.worldCopyJump = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"maxBoundsViscosity\", {\n        get: function () {\n            return this.options.maxBoundsViscosity;\n        },\n        /**\n         * Input for the maxBoundsViscosity.\n         * Use it with `<yaga-map [maxBoundsViscosity]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-maxboundsviscosity Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.maxBoundsViscosity = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"keyboardEnabled\", {\n        get: function () {\n            return this.keyboard.enabled();\n        },\n        // maybe 2way!?!\n        /**\n         * Input for the keyboardEnabled.\n         * Use it with `<yaga-map [keyboardEnabled]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-keyboard Original Leaflet documentation\n         */\n        set: function (val) {\n            if (val) {\n                this.keyboard.enable();\n                return;\n            }\n            this.keyboard.disable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"keyboardPanDelta\", {\n        get: function () {\n            return this.options.keyboardPanDelta;\n        },\n        /**\n         * Input for the keyboardPanDelta.\n         * Use it with `<yaga-map [keyboardPanDelta]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-keyboardpandelta Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.keyboardPanDelta = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"scrollWheelZoomEnabled\", {\n        get: function () {\n            return this.scrollWheelZoom.enabled();\n        },\n        // maybe 2way!?!\n        /**\n         * Input for the scrollWheelZoomEnabled.\n         * Use it with `<yaga-map [scrollWheelZoomEnabled]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-scrollwheelzoom Original Leaflet documentation\n         */\n        set: function (val) {\n            if (val) {\n                this.scrollWheelZoom.enable();\n                return;\n            }\n            this.scrollWheelZoom.disable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"wheelDebounceTime\", {\n        get: function () {\n            return this.options.wheelDebounceTime;\n        },\n        /**\n         * Input for the wheelDebounceTime.\n         * Use it with `<yaga-map [wheelDebounceTime]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-wheeldebouncetime Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.wheelDebounceTime = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"wheelPxPerZoomLevel\", {\n        get: function () {\n            return this.options.wheelPxPerZoomLevel;\n        },\n        /**\n         * Input for the wheelPxPerZoomLevel.\n         * Use it with `<yaga-map [wheelPxPerZoomLevel]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-wheelpxperzoomlevel Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.wheelPxPerZoomLevel = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"tapEnabled\", {\n        get: function () {\n            return !!this.options.tap;\n        },\n        /**\n         * Input for the tapEnabled.\n         * Use it with `<yaga-map [tapEnabled]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-tap Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.tap = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"tapTolerance\", {\n        get: function () {\n            return this.options.tapTolerance;\n        },\n        /**\n         * Input for the tapTolerance.\n         * Use it with `<yaga-map [tapTolerance]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-taptolerance Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.tapTolerance = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"bounceAtZoomLimits\", {\n        get: function () {\n            return !!this.options.bounceAtZoomLimits;\n        },\n        /**\n         * Input for the bounceAtZoomLimits.\n         * Use it with `<yaga-map [bounceAtZoomLimits]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-bounceatzoomlimits Original Leaflet documentation\n         */\n        set: function (val) {\n            this.options.bounceAtZoomLimits = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapComponent.prototype, \"touchZoomEnabled\", {\n        get: function () {\n            return this.touchZoom.enabled();\n        },\n        // maybe 2way!?!\n        /**\n         * Input for the touchZoomEnabled.\n         * Use it with `<yaga-map [touchZoomEnabled]=\"someValue\">`\n         * @link http://leafletjs.com/reference-1.2.0.html#map-touchzoom Original Leaflet documentation\n         */\n        set: function (val) {\n            if (val) {\n                this.touchZoom.enable();\n                return;\n            }\n            this.touchZoom.disable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"zoomChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"latChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"lngChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"minZoomChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"maxZoomChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"maxBoundsChange\", void 0);\n    __decorate([\n        core_1.Output(\"baselayerchange\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"baselayerchangeEvent\", void 0);\n    __decorate([\n        core_1.Output(\"overlayadd\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"overlayaddEvent\", void 0);\n    __decorate([\n        core_1.Output(\"overlayremove\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"overlayremoveEvent\", void 0);\n    __decorate([\n        core_1.Output(\"layeradd\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"layeraddEvent\", void 0);\n    __decorate([\n        core_1.Output(\"layerremove\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"layerremoveEvent\", void 0);\n    __decorate([\n        core_1.Output(\"zoomlevelschange\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"zoomlevelschangeEvent\", void 0);\n    __decorate([\n        core_1.Output(\"resize\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"resizeEvent\", void 0);\n    __decorate([\n        core_1.Output(\"unload\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"unloadEvent\", void 0);\n    __decorate([\n        core_1.Output(\"viewreset\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"viewresetEvent\", void 0);\n    __decorate([\n        core_1.Output(\"load\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"loadEvent\", void 0);\n    __decorate([\n        core_1.Output(\"zoomstart\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"zoomstartEvent\", void 0);\n    __decorate([\n        core_1.Output(\"movestart\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"movestartEvent\", void 0);\n    __decorate([\n        core_1.Output(\"zoom\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"zoomEvent\", void 0);\n    __decorate([\n        core_1.Output(\"move\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"moveEvent\", void 0);\n    __decorate([\n        core_1.Output(\"zoomend\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"zoomendEvent\", void 0);\n    __decorate([\n        core_1.Output(\"moveend\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"moveendEvent\", void 0);\n    __decorate([\n        core_1.Output(\"boxzoomstart\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"boxzoomstartEvent\", void 0);\n    __decorate([\n        core_1.Output(\"boxzoomend\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"boxzoomendEvent\", void 0);\n    __decorate([\n        core_1.Output(\"popupopen\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"popupopenEvent\", void 0);\n    __decorate([\n        core_1.Output(\"popupclose\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"popupcloseEvent\", void 0);\n    __decorate([\n        core_1.Output(\"autopanstart\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"autopanstartEvent\", void 0);\n    __decorate([\n        core_1.Output(\"tooltipopen\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"tooltipopenEvent\", void 0);\n    __decorate([\n        core_1.Output(\"tooltipclose\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"tooltipcloseEvent\", void 0);\n    __decorate([\n        core_1.Output(\"click\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"clickEvent\", void 0);\n    __decorate([\n        core_1.Output(\"dblclick\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"dblclickEvent\", void 0);\n    __decorate([\n        core_1.Output(\"mousedown\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"mousedownEvent\", void 0);\n    __decorate([\n        core_1.Output(\"mouseup\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"mouseupEvent\", void 0);\n    __decorate([\n        core_1.Output(\"mouseover\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"mouseoverEvent\", void 0);\n    __decorate([\n        core_1.Output(\"mouseout\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"mouseoutEvent\", void 0);\n    __decorate([\n        core_1.Output(\"mousemove\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"mousemoveEvent\", void 0);\n    __decorate([\n        core_1.Output(\"contextmenu\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"contextmenuEvent\", void 0);\n    __decorate([\n        core_1.Output(\"keypress\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"keypressEvent\", void 0);\n    __decorate([\n        core_1.Output(\"preclick\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"preclickEvent\", void 0);\n    __decorate([\n        core_1.Output(\"zoomanim\"),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], MapComponent.prototype, \"zoomanimEvent\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], MapComponent.prototype, \"zoom\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], MapComponent.prototype, \"lat\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], MapComponent.prototype, \"lng\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], MapComponent.prototype, \"minZoom\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], MapComponent.prototype, \"maxZoom\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"crs\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", leaflet_1.LatLngBounds),\n        __metadata(\"design:paramtypes\", [leaflet_1.LatLngBounds])\n    ], MapComponent.prototype, \"maxBounds\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"closePopupOnClick\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"zoomSnap\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"zoomDelta\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"trackResize\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MapComponent.prototype, \"boxZoomEnabled\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MapComponent.prototype, \"doubleClickZoomEnabled\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MapComponent.prototype, \"draggingEnabled\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MapComponent.prototype, \"fadeAnimation\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MapComponent.prototype, \"markerZoomAnimation\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"transform3DLimit\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MapComponent.prototype, \"zoomAnimation\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"zoomAnimationThreshold\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MapComponent.prototype, \"inertia\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"inertiaDeceleration\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"inertiaMaxSpeed\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"easeLinearity\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MapComponent.prototype, \"worldCopyJump\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"maxBoundsViscosity\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MapComponent.prototype, \"keyboardEnabled\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"keyboardPanDelta\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MapComponent.prototype, \"scrollWheelZoomEnabled\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"wheelDebounceTime\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"wheelPxPerZoomLevel\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MapComponent.prototype, \"tapEnabled\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], MapComponent.prototype, \"tapTolerance\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MapComponent.prototype, \"bounceAtZoomLimits\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], MapComponent.prototype, \"touchZoomEnabled\", null);\n    MapComponent = __decorate([\n        core_1.Component({\n            providers: [layer_group_provider_1.LayerGroupProvider, map_provider_1.MapProvider],\n            selector: \"yaga-map\",\n            styles: [\":host { display: block; }\"],\n            template: \"<span style=\\\"display: none\\\"><ng-content></ng-content></span>\",\n        }),\n        __param(0, core_1.Inject(core_1.ElementRef)),\n        __param(1, core_1.Host()),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef,\n            layer_group_provider_1.LayerGroupProvider,\n            map_provider_1.MapProvider])\n    ], MapComponent);\n    return MapComponent;\n}(leaflet_1.Map));\nexports.MapComponent = MapComponent;\n"]}